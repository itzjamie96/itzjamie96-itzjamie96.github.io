{"pages":[{"title":"about","text":"TESTINGGGThis is cool","link":"/about/index.html"}],"posts":[{"title":"Hexo로 블로그를 만들어봤다","text":"나도 블로그 만들었다!개발 공부를 시작한 이후로 수 많은 기술 블로그들을 접했다. 완전 멋있어!라고 생각했고 내가 만들 일은 없을 거라고 믿었다. 그런데 어느 날 나도 멋져보이고 싶었다! 그래서 호다닥 블로그 만드는 법을 검색해봤다. 플랫폼보통 ‘블로그’라 하면 네이버와 티스토리가 흔히 떠오르겠지만, 내가 생각한 멋진 블로그는 우선 주소창이 ~~.github.io이어야 했다 (단순히 멋있기 때문). 찾아보니 Static Website Generator로 페이지를 생성하고 GitHub Pages에 배포하면 된다고 한다! 근데 또 여기서 고민: 정적 페이지는 뭘로 만들지? 여러가지 정적 사이트 생성기가 있었다. Jekyll Hugo Hexo Gatsby a Ruby generator built by Github for powering their Github pages an extremly fast static generator built on top of the Go programming language a fast website generator based on Node.js a blazing fast static site/PWA generator built around modern web technologies such as React and GraphQL 참고: How to Choose the Right Static Generator: Jekyll vs. Hugo vs. Hexo 근데 이ㅣ중에서 내가 고를 수 있는 건 Hexo밖에 없었다. 저기 있는 기술 중 node.js밖에 안써봐서ㅎ 그래도 하나라도 아는 게 어딘가! 그리고 Hexo는 그 중 테마도 예쁜 게 제일 많았다! 나는 예쁜 게 좋은 사람이니 이게 제일 좋았다. Hexo 처음 써본 간략한 후기내 개발실력은 “실력”이라고 할 것도 없고 그냥 이제 막 “개발”에 발가락을 담궈본 수준이다. node.js도 써본 적만 있지 잘 아는 것도 아니었다. 그 상태로 나름 따라해본다고 이것 저것 검색해보고 만든 후, 커스터마이징 하려고 테마 폴더를 열어봤는데 그냥 기절할 뻔했다. 하나도 모르겠어! 흑흑 공부할게 아주 한참 남았구나 싶은 순간이었다. CSS도 나름 자신있다고 생각했는 데 절대 아니었다. 어디서 개발한다고 하지 말아야지…개발은 무슨 응애다. 그래도 어찌저찌 커마는 했다… 결론: 뭔지 모르고 그냥 만들었다 앞으로의 계획사실 이름만 거창하게 기술 블로그지, 아직 남들에게 공유할 만한 기술 스택은 갖춘게 없다. 대신 지금부터라도 꾸준하게 TIL을 기록해보려고 한다. 보여주기 식이라도 꾸준히 쓰면 머릿속에 하나라도 남겠지! 최소한 마크다운은 제대로 알게 되지 않을까?ㅎ 작심삼일이 아니길 기도할 뿐… Reference블로그 만들 때 참고한 자료들:YouTube DesignCourse: The Hexo Static Site (Blog) Generator - Beginner’s Crash Course YouTube 카인드패밀리: 오늘 부터 나도 github.io 블로그 운영자다!! | github pages , goormide, hexo","link":"/2020/03/14/I-made-a-blog-with-hexo/"},{"title":"Java HashMap","text":"Java HashMapArrays store items as an ordered collection and in order to access the items an index number (int type) is needed. A HashMap however, stores items in key/value pairs and you can access the value using the key. The &lt; &gt; notation tells the type of object used as keys and values. ExampleCreate a HashMap object called capitalCities that will store String keys and Integer values: 123import java.util.HashMap; // import the HashMap classHashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;(); ### Add Items To add items, use the `put()` method: 12345678capitalCities.put(\"Korea\", \"Seoul\");capitalCities.put(\"Poland\", \"Warsaw\");capitalCities.put(\"Germany\", \"Berlin\");System.out.println(capitalCities);//RESULT{Korea=Seoul, Poland=Warsaw, Germany=Berlin} Access an ItemTo access a value in the HashMap, use the get() method and refer to its key: 12345String city = capitalCities.get(\"Korea\");System.out.println(city);//RESULTSeoul Remove an ItemTo remove an item, use the remove() method and refer to its key: 12345capitalCities.remove(\"Germany\");System.out.println(capitalCities);//RESULT{Korea=Seoul, Poland=Warsaw} To remove ALL ITEMS, use the clear() method: 12345capitalCities.clear();System.out.println(capitalCities);//RESULT{} HashMap SizeTo find out how many items there are, use the size() method: 12345int size = capitalCities.size();System.out.println(size);//RESULT3 Loop Through a HashMapLoop through the items with a for-each loop.Note: use the keySet() method for keys, and use the values() method for values: 1234567for (String s : capitalCities.keySet()) { // process each key in turn }for (String s : capitalCities.values()) { // process each value in turn } Loop Through to FIND a keyCheck if the HashMap includes a given key with containsKey() method: 12345boolean USA = capitalCities.containsKey(\"USA\");System.out.println(USA);//RESULTfalse ReferenceDuke Learn to Program: Java Documentationw3schools.com","link":"/2020/03/18/Java-HashMap/"}],"tags":[{"name":"Life","slug":"Life","link":"/tags/Life/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"TIL","slug":"TIL","link":"/tags/TIL/"},{"name":"Java","slug":"Java","link":"/tags/Java/"}],"categories":[{"name":"Life","slug":"Life","link":"/categories/Life/"},{"name":"Java","slug":"Java","link":"/categories/Java/"}]}