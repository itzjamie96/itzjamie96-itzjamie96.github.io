<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Code with Jamie</title>
    <link>https://itzjamie96.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 10 Jan 2021 13:27:18 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Java Project] 간단한 Tic Tac Toe -1-</title>
      <link>https://itzjamie96.github.io/2021/01/10/project-java-tictactoe-1/</link>
      <guid>https://itzjamie96.github.io/2021/01/10/project-java-tictactoe-1/</guid>
      <pubDate>Sun, 10 Jan 2021 10:33:57 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;자바 공부를 다시 시작하며 프로젝트라고 부르기도 애매한🙈 아주 &lt;strong&gt;작고!!&lt;/strong&gt; 귀여운(ㅎ) tic tac toe 프로그램을 만들어봤다. 기본 문법만 호다닥 떼고 만들어서 아직 엉성한 부분도 많지만 직접 필요한 클래스와 메소드를 만들어보며 즐겁게 개발할 수 있던 프로젝트인만큼 정리해두면 좋을 것 같아서 남겨본다.&lt;br&gt;&lt;em&gt;*참고: 이 프로젝트의 명세는 HyperSkill의 Tic-Tac-Toe with AI 프로젝트를 참고했다.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><blockquote><p>자바 공부를 다시 시작하며 프로젝트라고 부르기도 애매한🙈 아주 <strong>작고!!</strong> 귀여운(ㅎ) tic tac toe 프로그램을 만들어봤다. 기본 문법만 호다닥 떼고 만들어서 아직 엉성한 부분도 많지만 직접 필요한 클래스와 메소드를 만들어보며 즐겁게 개발할 수 있던 프로젝트인만큼 정리해두면 좋을 것 같아서 남겨본다.<br><em>*참고: 이 프로젝트의 명세는 HyperSkill의 Tic-Tac-Toe with AI 프로젝트를 참고했다.</em></p></blockquote><a id="more"></a><br><p><img src="https://user-images.githubusercontent.com/53888115/104121217-eef64100-537f-11eb-9763-b61d7dd8ee13.gif?style=centerme" alt="나의 아주 작고 귀엽고 간단한 Tic Tac Toe"></p><h2 id="프로젝트-소개"><a href="#프로젝트-소개" class="headerlink" title="프로젝트 소개"></a>프로젝트 소개</h2><p>Tic Tac Toe는 오목과 비슷한 게임으로 3x3판 위에 O나 X로 표시할 수 있다. 오목처럼 가로/세로/대각선으로 연속된 똑같은 모양이 나오면 해당 모양의 플레이어가 우승을 하는 방식이다. </p><p><strong>프로젝트의 기본 규칙:</strong></p><ol><li>게임이 시작할 때와 각 플레이어가 자신의 좌표를 입력한 후 테이블을 출력한다.</li><li>플레이어(=사용자)가 X로 첫 순서를 가져간다.</li><li>플레이어는 자기 순서가 되면 가능한 좌표의 x, y 값을 한 칸 띄고 숫자로 입력한다. (ex: 1 1)</li><li>플레이어가 자신의 좌표를 입력한 다음은 항상 컴퓨터의 차례다.</li><li>게임이 끝나면 어떤 플레이어가 이겼는지 알려준다.</li></ol><h2 id="접근-방법"><a href="#접근-방법" class="headerlink" title="접근 방법"></a>접근 방법</h2><h3 id="테이블-생성"><a href="#테이블-생성" class="headerlink" title="테이블 생성"></a>테이블 생성</h3><p>파이썬으로 알고리즘을 연습하면서 기본적인 2차원 배열을 생성할 때 <code>[[0]*N for _ in range(N)]</code> 이런 식으로 간단하게 코드를 짜는 게 습관이 돼 있었는데 자바는 <del>배열의 크기를 직접 지정</del>해서 선언 후 초기화 작업을 해줘야 했기 때문에 고민하다 그냥 처음부터 <code>{0, 0, 0}</code>의 형식으로 초기화를 해줬다. </p><figure class="highlight java"><figcaption><span>initialize table</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] table = {{<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>},{<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>},{<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>}};</span><br></pre></td></tr></tbody></table></figure><p><del>int 배열로 생성한 이유</del>는 나중에 bingo(가로/세로/대각선에 연속으로 같은 값이 있는 것. 편의상 빙고라고 부를 예정)를 찾아야 하는 데 <code>O</code>나 <code>X</code>인 string 형태를 일일이 비교하는 것보다 <code>O</code>는 <code>-1</code>, <code>X</code>는 <code>1</code>로 두고 합을 찾아다니는 게 훨씬 효율적일 것이라고 생각했기 때문이다. 이 부분에 대해서는 뒤의 우승자를 찾는 <code>checkWinner()</code> 메서드를 설명할 때 더 자세히 다룰 것이다. </p><br><h3 id="테이블-출력"><a href="#테이블-출력" class="headerlink" title="테이블 출력"></a>테이블 출력</h3><p>각 플레이어의 턴이 될 때마다 테이블을 출력해 줘야한다. 게임이 언제 끝날지도 모르는 데 모든 턴마다 for문으로 테이블을 프린트하고 있을 수는 없기 때문에 <code>printTable()</code> 메서드를 만들었다. 참고로 내 테이블과 그 안의 값들은 <code>int</code>꼴이기 때문에 <code>O</code>와 <code>X</code>로 바꿔주는 과정을 거쳤다. </p><figure class="highlight java"><figcaption><span>print table</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printTable</span><span class="params">(<span class="keyword">int</span>[][] table)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"---------"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++){</span><br><span class="line">            System.out.print(<span class="string">"| "</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) {</span><br><span class="line">                <span class="keyword">if</span> (table[i][j] == <span class="number">0</span>) {</span><br><span class="line">                    System.out.print(<span class="string">" "</span>);</span><br><span class="line">                } <span class="keyword">else</span> <span class="keyword">if</span> (table[i][j] == <span class="number">1</span>){</span><br><span class="line">                    System.out.print(<span class="string">"X"</span>);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    System.out.print(<span class="string">"O"</span>);</span><br><span class="line">                }</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            }</span><br><span class="line">            System.out.println(<span class="string">"|"</span>);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"---------"</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><br><h3 id="좌표-입력받기"><a href="#좌표-입력받기" class="headerlink" title="좌표 입력받기"></a>좌표 입력받기</h3><h4 id="좌표-클래스-생성"><a href="#좌표-클래스-생성" class="headerlink" title="좌표 클래스 생성"></a>좌표 클래스 생성</h4><p>자바에는 <code>tuple</code>이 없다 (뚜둥. 나는 이걸 몰랐었다). 따라서 처음에는 길이가 2인 <code>int</code> 배열을 만들어서 array[0]은 x, array[1]은 y의 형태로 각 좌표를 담았었다. 근데 이 좌표들을 <code>ArrayList</code>에 담아서 보관하려 했더니 구현은 되지만 옳지 않다는 조언<sup><a href="#Reference">1</a></sup>을 듣고(코드 리뷰가 절실…🥺) 직접 <code>Coordinate</code> 클래스를 만들어서 객체를 생성하는 형식으로 바꿨다. </p><figure class="highlight java"><figcaption><span>the coordinate class</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coordinate</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> y;</span><br><span class="line"></span><br><span class="line">    Coordinate(<span class="keyword">int</span> x, <span class="keyword">int</span> y) {</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>특별히 좌표의 값을 새롭게 지정할 일은 없을 것 같아서 <code>setter</code>는 만들지 않았다. 이렇게 만든 좌표들을 <strong>visited</strong>라는 <code>ArrayList</code>에 담아서 이미 입력된 좌표는 아닌지 확인할 수 있도록 했다. </p><figure class="highlight java"><figcaption><span>visited</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Coordinate&gt; visited = <span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</span><br></pre></td></tr></tbody></table></figure><br><h4 id="플레이어-좌표-입력받기"><a href="#플레이어-좌표-입력받기" class="headerlink" title="플레이어 좌표 입력받기"></a>플레이어 좌표 입력받기</h4><p>게임이 시작하며(=게임 loop 시작) 사용자에게 input을 입력받게 된다. 사용자가 직접 입력해야 하는 만큼 잘못된 input이 들어올 수 있다고 생각했다. 따라서 이 부분은 <code>try-catch</code>를 이용해 잘못된 input이 입력되면 에러 메세지를 띄우도록 했다.</p><p>올바른 좌표를 입력받게 되면 <code>Coordinate</code> 객체를 생성해 해당 좌표를 생성하고, 아까 만들어둔 visited 배열에 이번 좌표가 있는지 확인 후 <code>boolean</code>을 리턴하는 <code>contains()</code> 메서드를 만들었다. </p><figure class="highlight java"><figcaption><span>contains</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(List&lt;Coordinate&gt; visited, Coordinate xy)</span> </span>{</span><br><span class="line">    <span class="keyword">for</span> (Coordinate c : visited) {</span><br><span class="line">        <span class="keyword">if</span> (c.getX() == xy.getX() &amp;&amp; c.getY() == xy.getY()) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;    <span class="comment">//만약 좌표가 visited에 있으면 true</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>visited에 없는 좌표라면 당연히 입력 가능한 좌표기 때문에 table에 플레이어의 표시인 <code>1</code>을 해당 위치에 넣어주고 visited에 추가를 해준다. </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Coordinate playerXY = <span class="keyword">new</span> Coordinate(sc.nextInt() - <span class="number">1</span>, sc.nextInt() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!contains(visited, playerXY)) {</span><br><span class="line">    table[playerXY.getX()][playerXY.getY()] = <span class="number">1</span>;    <span class="comment">//플레이어 표시</span></span><br><span class="line">    visited.add(playerXY);  <span class="comment">//방문처리</span></span><br><span class="line">    cnt++;  </span><br><span class="line">    printTable(table);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><br><h3 id="컴퓨터-좌표-생성하기"><a href="#컴퓨터-좌표-생성하기" class="headerlink" title="컴퓨터 좌표 생성하기"></a>컴퓨터 좌표 생성하기</h3><p>자, 이제 나름 이 프로그램의 핵심인 컴퓨터의 좌표를 생성해야 한다. 이 프로그램이 <strong>작고 귀여운</strong> 이유는 컴퓨터가 우승하려는 의지가 전혀 없기 때문이다ㅎ. 우리의 상대방인 컴퓨터는 남은 빈칸들 중에서 <del>랜덤으로</del> 좌표를 선택한다. 간단하게 visited에 없는 좌표가 나올 때까지 <code>random.nextInt(3)</code>을 통해 좌표를 생성하고 플레이어와 반대로 <code>-1</code>을 값으로 넣어준다.</p><figure class="highlight java"><figcaption><span>computer's turn</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">    Coordinate randomXY = <span class="keyword">new</span> Coordinate(random.nextInt(<span class="number">3</span>), random.nextInt(<span class="number">3</span>));</span><br><span class="line">    <span class="keyword">if</span> (!contains(visited, randomXY)) {</span><br><span class="line">        table[randomXY.getX()][randomXY.getY()] = -<span class="number">1</span>;</span><br><span class="line">        visited.add(randomXY);</span><br><span class="line">        cnt++;</span><br><span class="line">        printTable(table);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>비록 지금은 조금 덜 똑똑해 보이는 opponent지만 앞으로 더 똑똑해지도록 발전시킬 예정이다 (이 포스트의 제목 뒤에 -1-이 붙어있는 이유🤘). </p><br><h3 id="우승자-확인하기"><a href="#우승자-확인하기" class="headerlink" title="우승자 확인하기"></a>우승자 확인하기</h3><p>각 턴이 지난 후 우승자가 있는지 확인하는 것도 좋지만, 굳이 모든 턴마다 빙고를 확인하는 메서드를 실행할 필요는 없다고 생각했다. 따라서 각 턴이 지날 때마다 증가하는 <code>cnt</code> 변수를 생성해두고, 게임이 5턴 이상 진행되었을 때부터 빙고를 확인하도록 했다 (나름의 효율성과 시간을 고려한 전략). </p><figure class="highlight java"><figcaption><span>check for bingo</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (cnt &gt; <span class="number">4</span>) {</span><br><span class="line">    <span class="comment">// 9회차 = 가능한 게임의 마지막 턴</span></span><br><span class="line">    <span class="keyword">if</span> (cnt == <span class="number">9</span>) {</span><br><span class="line">        System.out.println(checkWinner(table));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    result = checkWinner(table);    <span class="comment">//아직 우승자가 나오지 않은 경우 Draw라 리턴된다</span></span><br><span class="line">    <span class="keyword">if</span> (!result.equals(<span class="string">"Draw"</span>)) {   <span class="comment">//우승자가 나오면 결과 바로 프린트하기</span></span><br><span class="line">        System.out.println(result);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>만약 아직 테이블에 빈칸이 남아있지만 그전에 우승자가 나온다면 바로 게임이 끝날 수 있도록 했다. </p><p>이제 우승자를 찾아내는 메서드를 보자. 앞서 플레이어는 <code>1</code>이고 컴퓨터가 <code>-1</code>이라고 설계했는데, 이것은 빙고를 조금 더 빠르게 찾아내기 위해서였다. 만약 연속으로 <code>111</code>이 있다면 그 줄의 합은 <code>3</code>일 것이기 때문에 각 방향의 합만 찾으면 우승자가 있는지 없는지 알 수 있다. </p><figure class="highlight java"><figcaption><span>check for winner</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">checkWinner</span><span class="params">(<span class="keyword">int</span>[][] table)</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> leftSum = <span class="number">0</span>, rightSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> rowSum = <span class="number">0</span>, colSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) {</span><br><span class="line">            rowSum += table[i][j];</span><br><span class="line">            colSum += table[j][i];</span><br><span class="line">            rightSum += table[j][<span class="number">2</span> - j];</span><br><span class="line">        }</span><br><span class="line">        leftSum += table[i][i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rowSum == <span class="number">3</span> || colSum == <span class="number">3</span> || leftSum == <span class="number">3</span> || rightSum == <span class="number">3</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"X wins"</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (rowSum == -<span class="number">3</span> || colSum == -<span class="number">3</span> || leftSum == -<span class="number">3</span> || rightSum == -<span class="number">3</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"O wins"</span>;</span><br><span class="line">        }</span><br><span class="line">        rightSum = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Draw"</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>가로, 세로, 대각선으로 돌면서 각 방향의 합이 <code>3</code>이 나오면 플레이어가 우승, <code>-3</code>이 나오면 컴퓨터가 우승하는 것이다. </p><br><h2 id="프로젝트를-마무리하며"><a href="#프로젝트를-마무리하며" class="headerlink" title="프로젝트를 마무리하며"></a>프로젝트를 마무리하며</h2><p>나의 작고 귀여운 tic tac toe 프로젝트는 아직 끝나지 않았다. 아직 상대편인 컴퓨터가 덜 똑똑하기 때문이다ㅋㅋㅋㅋ. </p><p>정말 간단할 거라고 생각해서 시작한 사이드 프로젝트였는데, 생각 이상으로 많은 것을 배울 수 있었다. 분명 코드로 옮기기 전에 나름 논리적으로 로직을 설계했다고 생각했는데, 막상 코드로 옮겨 적고 나니 삼백만 개의 문제에 부딪혔다🤦‍♀️. 하지만 문제들을 해결하면서 전보다 자바를 더 이해할 수 있게 된 것 같아서 아주 뿌듯하다. </p><p>또한, 코드 리뷰가 정말 정말 중요하다는 것을 깨달았다. 아무리 내가 혼자 열심히 생각하고 구현해도 이게 잘 쓴 코드인지 알 수가 없었다. 이때 너무 감사하게도 <a href="http://linkedin.com/in/종현-이-a413a1ab">현 스푼 라디오 이종현 개발자님</a>이 한 줄기 빛과 같은 코드 리뷰를 해주셨다(🙇‍♀️🙇‍♀️🙇‍♀️). 리뷰를 받고 다시 한번 깨달았다. 코드 리뷰가 진짜 중요하다는 것을…그리고 앞으로 공부할 게 정말 많다는 것을…</p><p>여러모로 재밌는 프로젝트였다. 다음엔 더 똑똑해진 컴퓨터를 만들어봐야지!</p><p><em>전체 코드를 보려면 <a href="https://github.com/itzjamie96/Studying-Java/blob/master/Tic-Tac-Toe/TicTackToe/src/stage2/Main.java">여기</a>로!</em></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://stackoverflow.com/questions/788433/can-you-pass-an-int-array-to-a-generic-method-in-java">Can you pass an int array to a generic method in java?</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2021/01/10/project-java-tictactoe-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 파이썬 SW 문제해결 기본: Stack1</title>
      <link>https://itzjamie96.github.io/2020/12/30/swea-python-ps-stack1/</link>
      <guid>https://itzjamie96.github.io/2020/12/30/swea-python-ps-stack1/</guid>
      <pubDate>Wed, 30 Dec 2020 12:31:40 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;amp;subjectId=AWOVHzyqqe8DFAWg#&quot;&gt;[문제링크] 파이썬 SW 문제해결 기본 - Stack1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4869-종이붙이기&quot;&gt;&lt;a href=&quot;#4869-종이붙이기&quot; class=&quot;headerlink&quot; title=&quot;[4869] 종이붙이기&quot;&gt;&lt;/a&gt;[4869] 종이붙이기&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;점화식 구하기 = 최종적으로 어떤 경우가 남는지 확인한다&lt;/li&gt;
&lt;li&gt;가로 길이가 10인 종이와 20인 종이로 만들 수 있는 경우는 총 3가지다&lt;/li&gt;
&lt;li&gt;10짜리 종이가 끝에 오는 경우 1개, 20짜리 종이가 끝에 오는 경우 2개&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVHzyqqe8DFAWg#">[문제링크] 파이썬 SW 문제해결 기본 - Stack1</a></p><h2 id="4869-종이붙이기"><a href="#4869-종이붙이기" class="headerlink" title="[4869] 종이붙이기"></a>[4869] 종이붙이기</h2><p><strong>접근 방법</strong></p><ul><li>점화식 구하기 = 최종적으로 어떤 경우가 남는지 확인한다</li><li>가로 길이가 10인 종이와 20인 종이로 만들 수 있는 경우는 총 3가지다</li><li>10짜리 종이가 끝에 오는 경우 1개, 20짜리 종이가 끝에 오는 경우 2개</li></ul><a id="more"></a><blockquote><p>나는 처음에 이 문제를 대체 어떻게 접근해야 할지 몰라서 좌절했었다. 다행히 점화식에 대한 접근은 어떤 친절한 분이 <a href="https://swexpertacademy.com/main/talk/solvingTalk/boardCommuView.do?searchCondition=COMMU_DETAIL-COMMU_TITLE-NICK_NAME_TAG&amp;commuId=AW1jVju6NjIDFARC&amp;searchKeyword=DP&amp;orderBy=COUNT_DESC&amp;pageSize=30&amp;pageIndex=1">SWEA Solving Talk에 답변</a>해 주신 걸 보고 이해할 수 있었다.</p></blockquote><p><img src="/img/20201230/4869.png" alt="4869 점화식 구하기"></p><figure class="highlight python"><figcaption><span>4869</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">paste</span><span class="params">(N)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> N &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> paste(N<span class="number">-1</span>) + <span class="number">2</span>*paste(N<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())//<span class="number">10</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, paste(N)))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4866-괄호검사"><a href="#4866-괄호검사" class="headerlink" title="[4866] 괄호검사"></a>[4866] 괄호검사</h2><p><strong>접근 방법</strong></p><ul><li>여는 괄호(<code>{</code> or <code>(</code>)가 있으면 스택에 넣어준다</li><li>닫는 괄호(<code>}</code> or <code>)</code>)가 들어오면<ul><li>스택의 top이 짝이 되는 열린 괄호가 아니면 바로 리턴 0<ul><li>ex) <code>}</code>이 들어왔는데 top이 <code>(</code>인 경우</li></ul></li><li>스택의 top이 짝이 되는 열린 괄호가 맞는다면 pop 해준다</li></ul></li><li>input의 길이만큼 for 문이 다 돌고도 스택에 뭐가 남아있으면 짝이 없는 것이기 때문에 리턴 0</li><li>그동안 강제 리턴도 없었고 스택에 남은 것도 없으면 리턴 1</li></ul><figure class="highlight python"><figcaption><span>4866</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPair</span><span class="params">(string)</span>:</span></span><br><span class="line">    stack = []</span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> string:</span><br><span class="line">        <span class="keyword">if</span> element == <span class="string">'{'</span> <span class="keyword">or</span> element == <span class="string">'('</span>:</span><br><span class="line">            stack.append(element)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> element == <span class="string">'}'</span>:</span><br><span class="line">            <span class="keyword">if</span> len(stack)&gt;<span class="number">0</span> <span class="keyword">and</span> stack[<span class="number">-1</span>] == <span class="string">'{'</span>:</span><br><span class="line">                stack.pop()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> element == <span class="string">')'</span>:</span><br><span class="line">            <span class="keyword">if</span> len(stack)&gt;<span class="number">0</span> <span class="keyword">and</span> stack[<span class="number">-1</span>] == <span class="string">'('</span>:</span><br><span class="line">                stack.pop()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(stack) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    string = input()</span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, isPair(string)))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4871-그래프-경로"><a href="#4871-그래프-경로" class="headerlink" title="[4871] 그래프 경로"></a>[4871] 그래프 경로</h2><p><strong>접근 방법</strong></p><ul><li>모든 경로의 경우를 path라는 리스트에 담아둔다</li><li>path에 S~G가 다 있으면 1, 없으면 0</li></ul><figure class="highlight python"><figcaption><span>4871</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findRoute</span><span class="params">(vertex)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> ans</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 만약 현재 들어온 vertex가 end와 동일하다면</span></span><br><span class="line">    <span class="comment"># path안에 vertex/end가 있는지 확인하고 있으면 1로 처리 후 리턴</span></span><br><span class="line">    <span class="keyword">if</span> vertex == end:</span><br><span class="line">        <span class="keyword">if</span> vertex <span class="keyword">in</span> path:</span><br><span class="line">            ans = <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 1 ~ V까지 모든 vertex를 돌면서</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, V + <span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 현재 vertex와 연결된 다른 vertex중 아직 확인 안해본 게 있는지 찾아본다</span></span><br><span class="line">            <span class="keyword">if</span> graph[vertex][i] == <span class="number">1</span> <span class="keyword">and</span> visited[i] == <span class="number">0</span>:</span><br><span class="line">                visited[i] = <span class="number">1</span>  <span class="comment"># 있다면 방문처리 후 path에 넣어준다</span></span><br><span class="line">                path.append(i)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># vertex - i의 연결이 확인됐으니 i와 또 연결된 다른 vertex가 있는지 </span></span><br><span class="line">                <span class="comment"># 확인하기 위해 재귀로 호출</span></span><br><span class="line">                findRoute(i)</span><br><span class="line"></span><br><span class="line">                visited[i] = <span class="number">0</span></span><br><span class="line">                path.pop  <span class="comment"># 딱히 루트가 없었다면 path에서 현재 i를 뺀다</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    V, E = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1 ~ V까지 있는 그래프를 만든다</span></span><br><span class="line">    graph = [[<span class="number">0</span>] * (V + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1 ~ V까지 있는 리스트를 만든다 (방문처리용)</span></span><br><span class="line">    visited = [<span class="number">0</span>] * (V + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 그래프에 edge들을 표시해준다</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(E):</span><br><span class="line">        a, b = map(int, input().split())</span><br><span class="line">        graph[a][b] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># S와 G를 받는다 (이해가 쉽도록 start와 end로 변수명을 바꿨다)</span></span><br><span class="line">    start, end = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># path라는 리스트를 만든다</span></span><br><span class="line">    <span class="comment"># start와 연결된 vertex들은 여기에 추가될 것이다</span></span><br><span class="line">    path = [start]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 시작점부터 방문처리 해준다</span></span><br><span class="line">    visited[start] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 답은 0이나 1만 가능</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    findRoute(start)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, ans))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4873-반복문자-지우기"><a href="#4873-반복문자-지우기" class="headerlink" title="[4873] 반복문자 지우기"></a>[4873] 반복문자 지우기</h2><p><strong>접근 방법</strong></p><ul><li>현재 문자와 바로 다음 문자가 같다면 문자 하나를 지운다</li><li>지우는 방법: <code>시작-i</code> + <code>i+2-끝</code></li><li>지운 후에는 다시 맨 첫번째 인덱스부터 확인할 수 있도록 인덱스 값을 0으로 바꿔준다</li><li>만약 현재 문자와 다음 문자가 다르다면 그 다음 인덱스로 넘어간다</li></ul><figure class="highlight python"><figcaption><span>4873</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    text = input()</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> i == len(text)<span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> text[i] == text[i + <span class="number">1</span>]:</span><br><span class="line">                text = text[:i] + text[i + <span class="number">2</span>:]</span><br><span class="line">                i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, len(text)))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/30/swea-python-ps-stack1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Git] cherry-pick으로 원하는 commit 가져오기</title>
      <link>https://itzjamie96.github.io/2020/12/10/git-cherry-pick-basics/</link>
      <guid>https://itzjamie96.github.io/2020/12/10/git-cherry-pick-basics/</guid>
      <pubDate>Thu, 10 Dec 2020 13:22:02 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;최근 새롭게 알고리즘 스터디를 꾸리게 되면서 git의 cherry-pick 기능을 써보게 되었다. git은 &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt; 명령어만 아는 git알못이었는데, 스터디 덕분에 새로운 git잘알에 한 발자국 다가가게 된 것 같다. 나도 git잘알이 되고 싶어서 정리해본 &lt;code&gt;cherry-pick&lt;/code&gt;! &lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><blockquote><p>최근 새롭게 알고리즘 스터디를 꾸리게 되면서 git의 cherry-pick 기능을 써보게 되었다. git은 <code>add</code>, <code>commit</code>, <code>push</code> 명령어만 아는 git알못이었는데, 스터디 덕분에 새로운 git잘알에 한 발자국 다가가게 된 것 같다. 나도 git잘알이 되고 싶어서 정리해본 <code>cherry-pick</code>! </p></blockquote><a id="more"></a><h2 id="cherry-pick-무슨-뜻이람"><a href="#cherry-pick-무슨-뜻이람" class="headerlink" title="cherry-pick? 무슨 뜻이람"></a>cherry-pick? 무슨 뜻이람</h2><p>git의 명령어들은 영어다. 다행히 난 영문학과 출신이다. <del>cherry-pick</del> 두 단어를 보니 체리를 고른다는 뜻 같다. 이게 뭐람? </p><blockquote><p>A metaphor, from the idea of picking through a bowl of cherries and seeking the best for oneself, or the idea of picking off the cherries for oneself from a cake or dessert.<sup><a href="#Reference">1</a></sup></p></blockquote><p>찾아보니 체리 한 바구니에서 <del>제일 좋은 체리만 고르는 것</del>에서 유래한 표현이라고 한다. git에서만 쓰는 표현인 줄 알았는데 알고 보니 그냥 동사였다. 일반적으로는 제일 좋은 걸 선별한다는 뜻으로 쓰인다고 한다. 영어공부도 하고 git 공부도 하고 진짜 일석이조다. </p><p>자, 그렇다면 git에서 제일 좋은 것만 고른다는 건 무슨 뜻일까?</p><br><h2 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h2><p><code>git cherry-pick</code> 명령어는 git log에서 <del>특정한 commit 하나만 콕 찝어서</del> 현재 HEAD가 가리키는 <del>branch에 추가</del>할 수 있게 해준다. 쉽게 말해서 다른 branch에 있는 commit을 지금 내 branch에 가져와서 commit 할 수 있는 것이다. </p><p>참고로 commit을 branch에서 다른 branch로 <del>옮기는 건 아니고</del>, 전체 history를 따지면 새로운 commit이 늘어나는 것이다. </p><br><h2 id="cherry-pick은-언제-써야-할까"><a href="#cherry-pick은-언제-써야-할까" class="headerlink" title="cherry-pick은 언제 써야 할까"></a>cherry-pick은 언제 써야 할까</h2><p>유용하긴 하지만 <code>cherry-pick</code>이 항상 권장되는 것은 아니라고 한다. 같은 commit이 여러 번 쌓이는 일도 발생할 수 있기 때문에 cherry-picking이 가능한 상황에서 보통은 일반적인 <code>merge</code>를 사용하는 걸 선호한다고 한다.<sup><a href="#Reference">2</a></sup> 그렇다면 cherry-pick은 어떤 상황에서 유용할까? <strong>예시 상황</strong>을 생각해 보자. </p><h3 id="팀으로-협업할-때"><a href="#팀으로-협업할-때" class="headerlink" title="팀으로 협업할 때"></a>팀으로 협업할 때</h3><p>친구랑 사이드 프로젝트를 진행하고 있다. 나는 백엔드다. 현재 내가 맡은 기능이 프론트까지 더해졌을 때 어떻게 돌아가는지 확인하고 싶은데 프론트엔드를 맡은 친구가 지금 한창 작업 중이라고 한다. 아까 CSS 파일을 완성해서 commit해 뒀다고 한다. 그럼 난 <code>cherry-pick</code>을 통해 <del>그 commit 하나만 찾아서</del> 내 branch에 가져오면 된다. 오 CSS만 입혀볼 수 있게 됐다.</p><h3 id="버그-수정"><a href="#버그-수정" class="headerlink" title="버그 수정"></a>버그 수정</h3><p>나는 며칠 전 A 기능을 완성한 개발자다. A가 끝나고 B 기능을 개발하는 중이었는데, 알고 보니 A 기능에 버그가 있다고 한다. 더 많은 유저들이 이 버그로 인한 현상을 겪기 전에 빠르게 버그 패치를 해서 내 branch에 commit한다. 내가 방금 commit한 이 패치는 <code>git cherry-pick</code>을 통해 <code>main</code> branch에 바로 반영되었다. 휴 문제 해결.</p><h3 id="반영되지-않은-pr"><a href="#반영되지-않은-pr" class="headerlink" title="반영되지 않은 pr"></a>반영되지 않은 pr</h3><p>실수로 pull request를 <code>merge</code>하기 전에 닫아버렸다. 당황하지 않고 <code>git cherry-pick</code>을 통해 해당 commit을 가져옴으로써 살릴 수 있게 됐다. </p><h3 id="알고리즘-스터디"><a href="#알고리즘-스터디" class="headerlink" title="알고리즘 스터디"></a>알고리즘 스터디</h3><p>이건 실제 나의 경우인데, 알고리즘 스터디를 하며 스터디원들의 코드를 올리는 repository에서 main branch에서 모두의 코드를 push하는 것보다 각자의 branch를 만들어서 각각 올리는 방식을 선택했다. 우리는 주어진 같은 문제를 풀어오는 것을 원칙으로 하기 때문에 각 문제별 폴더를 main에서 생성하면 <code>cherry-pick</code>을 통해 폴더를 생성한 commit만 각자 branch로 따온다. </p><br><h2 id="cherry-pick-사용법"><a href="#cherry-pick-사용법" class="headerlink" title="cherry-pick 사용법"></a>cherry-pick 사용법</h2><h3 id="가져오고-싶은-commit의-이름-확인하기"><a href="#가져오고-싶은-commit의-이름-확인하기" class="headerlink" title="가져오고 싶은 commit의 이름 확인하기"></a>가져오고 싶은 commit의 이름 확인하기</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></tbody></table></figure><p>git log 명령어를 통해 내가 cherry-pick하고자 하는 commit의 이름을 확인한다. </p><p><img src="/img/20201210/git_log_example.png" alt="git log example"></p><p>내가 찾는 commit의 Hash 값을 복사한다. 예시에선 abc123이라고 적어뒀다. </p><h3 id="cherry-pick으로-추가하려는-branch로-이동"><a href="#cherry-pick으로-추가하려는-branch로-이동" class="headerlink" title="cherry-pick으로 추가하려는 branch로 이동"></a>cherry-pick으로 추가하려는 branch로 이동</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch name&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="cherry-pick-진행"><a href="#cherry-pick-진행" class="headerlink" title="cherry-pick 진행"></a>cherry-pick 진행</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick abc123</span><br></pre></td></tr></tbody></table></figure><p>끝! 잘 commit되었는지 확인하려면 <code>git log</code>를 통해 내 branch의 commit 내역을 보면 된다.</p><br><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://en.wiktionary.org/wiki/cherry-pick"><sup>1</sup> Wikipedia: cherry-pick</a><br><a href="https://www.atlassian.com/git/tutorials/cherry-pick"><sup>2</sup> Bitbucket: Git Cherry Pick</a><br><a href="https://www.merriam-webster.com/dictionary/cherry-pick">cherry-pick의 사전적 의미(Merriam Webster)</a><br><a href="https://stackoverflow.com/questions/9339429/what-does-cherry-picking-a-commit-with-git-mean#:~:text=The%20command%20git%20cherry%2Dpick%20is%20typically%20used%20to%20introduce,branch%20to%20a%20development%20branch.">Stack overflow: What does cherry-picking a commit with Git mean?</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/10/git-cherry-pick-basics/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 2007. 패턴 마디의 길이 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/06/swea-python-2007/</link>
      <guid>https://itzjamie96.github.io/2020/12/06/swea-python-2007/</guid>
      <pubDate>Sun, 06 Dec 2020 05:36:49 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5P1kNKAl8DFAUq&quot;&gt;2007. 패턴 마디의 길이&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;받은 문자열에서 길이가 1~10인 가능한 패턴을 모두 찾아서 리스트에 넣어준다&lt;/li&gt;
&lt;li&gt;패턴 리스트에서 for문을 돌리며 현재 있는 패턴이 반복되는 패턴이 맞는지 확인한다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5P1kNKAl8DFAUq">2007. 패턴 마디의 길이</a></p><p><strong>접근 방법</strong></p><ul><li>받은 문자열에서 길이가 1~10인 가능한 패턴을 모두 찾아서 리스트에 넣어준다</li><li>패턴 리스트에서 for문을 돌리며 현재 있는 패턴이 반복되는 패턴이 맞는지 확인한다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>2007</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    string = input()</span><br><span class="line"></span><br><span class="line">    pList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        pList.append(string[:i])</span><br><span class="line"></span><br><span class="line">    ans = <span class="number">10</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        tmp = len(pList[i])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> string[:tmp] == string[tmp:<span class="number">2</span> * tmp]:</span><br><span class="line">            <span class="keyword">if</span> tmp &lt; ans:</span><br><span class="line">                ans = tmp</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, ans))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/06/swea-python-2007/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 2005. 파스칼의 삼각형 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/05/swea-python-2005/</link>
      <guid>https://itzjamie96.github.io/2020/12/05/swea-python-2005/</guid>
      <pubDate>Sat, 05 Dec 2020 05:31:08 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5P0-h6Ak4DFAUq&quot;&gt;2005. 파스칼의 삼각형&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;result를 이차원 배열로 만든다&lt;/li&gt;
&lt;li&gt;첫째줄은 [1]&lt;/li&gt;
&lt;li&gt;그 다음 줄 부터: 바로 앞 리스트에서 두개씩 더해서 현재 리스트에 더해주면 [1, a, b]의 꼴이 나옴&lt;/li&gt;
&lt;li&gt;그 뒤에 1을 하나 더 추가해준다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5P0-h6Ak4DFAUq">2005. 파스칼의 삼각형</a></p><p><strong>접근 방법</strong></p><ul><li>result를 이차원 배열로 만든다</li><li>첫째줄은 [1]</li><li>그 다음 줄 부터: 바로 앞 리스트에서 두개씩 더해서 현재 리스트에 더해주면 [1, a, b]의 꼴이 나옴</li><li>그 뒤에 1을 하나 더 추가해준다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>2005</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    result = [[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">        row = [<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(result[<span class="number">-1</span>])<span class="number">-1</span>):</span><br><span class="line">            sumV = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                sumV += result[<span class="number">-1</span>][j+k]</span><br><span class="line">            row.append(sumV)</span><br><span class="line">        row.append(<span class="number">1</span>)</span><br><span class="line">        result.append(row)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(result)):</span><br><span class="line">        print(*result[i])</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/05/swea-python-2005/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 2001. 파리 퇴치 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/05/swea-python-2001/</link>
      <guid>https://itzjamie96.github.io/2020/12/05/swea-python-2001/</guid>
      <pubDate>Sat, 05 Dec 2020 05:28:02 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PzOCKAigDFAUq&quot;&gt;2001. 파리 퇴치&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가로/세로로 M*M의 합을 확인하기 위해 이동할 수 있는 횟수 = N-M+1&lt;/li&gt;
&lt;li&gt;0 ~ N-M+1까지 이동하면서 그 안에서 M*M으로 이중for문을 돌린다&lt;ul&gt;
&lt;li&gt;M*M의 합이 현재 있는 최대합보다 크면 최대합 갱신해주기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PzOCKAigDFAUq">2001. 파리 퇴치</a></p><p><strong>접근 방법</strong></p><ul><li>가로/세로로 M*M의 합을 확인하기 위해 이동할 수 있는 횟수 = N-M+1</li><li>0 ~ N-M+1까지 이동하면서 그 안에서 M*M으로 이중for문을 돌린다<ul><li>M*M의 합이 현재 있는 최대합보다 크면 최대합 갱신해주기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>2001</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    square = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    maxi = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">            current = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(M):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> range(M):</span><br><span class="line">                    current += square[j+l][i+k]</span><br><span class="line">            <span class="keyword">if</span> current &gt; maxi:</span><br><span class="line">                maxi = current</span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, maxi))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/05/swea-python-2001/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1989. 초심자의 회문 검사 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/04/swea-python-1989/</link>
      <guid>https://itzjamie96.github.io/2020/12/04/swea-python-1989/</guid>
      <pubDate>Fri, 04 Dec 2020 05:27:01 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PyTLqAf4DFAUq&quot;&gt;1989. 초심자의 회문 검사&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단어를 str으로 받아서 뒤집은거랑 똑같은지 확인한다&lt;/li&gt;
&lt;li&gt;같으면 1, 아니면 0 출력&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PyTLqAf4DFAUq">1989. 초심자의 회문 검사</a></p><p><strong>접근 방법</strong></p><ul><li>단어를 str으로 받아서 뒤집은거랑 똑같은지 확인한다</li><li>같으면 1, 아니면 0 출력</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1989</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    word = input()</span><br><span class="line">    <span class="keyword">if</span> word == word[::<span class="number">-1</span>]:</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'#{} {}'</span>.format(tc, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'#{} {}'</span>.format(tc, <span class="number">0</span>))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/04/swea-python-1989/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1986. 지그재그 숫자 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/04/swea-python-1986/</link>
      <guid>https://itzjamie96.github.io/2020/12/04/swea-python-1986/</guid>
      <pubDate>Fri, 04 Dec 2020 05:25:28 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PxmBqAe8DFAUq&quot;&gt;1986. 지그재그 숫자&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1부터 N까지 홀수는 더하고 짝수는 뺀다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PxmBqAe8DFAUq">1986. 지그재그 숫자</a></p><p><strong>접근 방법</strong></p><ul><li>1부터 N까지 홀수는 더하고 짝수는 뺀다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1986</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">2</span>:</span><br><span class="line">            result += i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result -= i</span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, result))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/04/swea-python-1986/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1984. 중간 평균값 구하기 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/03/swea-python-1984/</link>
      <guid>https://itzjamie96.github.io/2020/12/03/swea-python-1984/</guid>
      <pubDate>Thu, 03 Dec 2020 05:24:22 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pw_-KAdcDFAUq&quot;&gt;1984. 중간 평균값 구하기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리스트로 받아서 정렬한다&lt;/li&gt;
&lt;li&gt;1번과 마지막꺼 뺀 값들의 합을 구한다&lt;/li&gt;
&lt;li&gt;합 / 8 = 평균&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pw_-KAdcDFAUq">1984. 중간 평균값 구하기</a></p><p><strong>접근 방법</strong></p><ul><li>리스트로 받아서 정렬한다</li><li>1번과 마지막꺼 뺀 값들의 합을 구한다</li><li>합 / 8 = 평균</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1984</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    nums = sorted(list(map(int, input().split())))</span><br><span class="line"></span><br><span class="line">    sumV = sum(nums[<span class="number">1</span>:<span class="number">9</span>])</span><br><span class="line">    avg = round(sumV/<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc,avg))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/03/swea-python-1984/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1983. 조교의 성적 매기기 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/03/swea-python-1983/</link>
      <guid>https://itzjamie96.github.io/2020/12/03/swea-python-1983/</guid>
      <pubDate>Thu, 03 Dec 2020 05:23:11 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PwGK6AcIDFAUq&quot;&gt;1983. 조교의 성적 매기기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 학생의 총점을 구해서 순서대로 리스트에 넣는다&lt;/li&gt;
&lt;li&gt;인덱스랑 함께 총점 기준으로 정렬한다&lt;/li&gt;
&lt;li&gt;N//10으로 정렬한 인덱스를 나눈다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PwGK6AcIDFAUq">1983. 조교의 성적 매기기</a></p><p><strong>접근 방법</strong></p><ul><li>각 학생의 총점을 구해서 순서대로 리스트에 넣는다</li><li>인덱스랑 함께 총점 기준으로 정렬한다</li><li>N//10으로 정렬한 인덱스를 나눈다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1983</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">grades = [<span class="string">'A+'</span>, <span class="string">'A0'</span>, <span class="string">'A-'</span>, <span class="string">'B+'</span>, <span class="string">'B0'</span>, <span class="string">'B-'</span>, <span class="string">'C+'</span>, <span class="string">'C0'</span>, <span class="string">'C-'</span>, <span class="string">'D0'</span>]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    scores = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        mid, fin, hw = map(int, input().split())</span><br><span class="line"></span><br><span class="line">        scores.append(<span class="number">0.35</span>*mid + <span class="number">0.45</span>*fin + <span class="number">0.2</span>*hw)</span><br><span class="line"></span><br><span class="line">    result = [(score, idx+<span class="number">1</span>) <span class="keyword">for</span> idx, score <span class="keyword">in</span> enumerate(scores)]</span><br><span class="line">    result.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    tmp = N//<span class="number">10</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> result[i][<span class="number">1</span>] == K:</span><br><span class="line">            ans = i//tmp</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc,grades[ans]))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/03/swea-python-1983/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1979. 어디에 단어가 들어갈 수 있을까 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/03/swea-python-1979/</link>
      <guid>https://itzjamie96.github.io/2020/12/03/swea-python-1979/</guid>
      <pubDate>Thu, 03 Dec 2020 04:52:00 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PuPq6AaQDFAUq&quot;&gt;1979. 어디에 단어가 들어갈 수 있을까&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;함수로 K길이의 1이 나오는지 확인한다 (가능한 공백은 1로 표시됨)&lt;ul&gt;
&lt;li&gt;확인할 문자열 check를 만들어둔다&lt;/li&gt;
&lt;li&gt;현재 input으로 들어온 줄에서 1이 연속으로 나올 때 check에 넣어줌&lt;ul&gt;
&lt;li&gt;만약 K랑 길이가 같으면 cnt+1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PuPq6AaQDFAUq">1979. 어디에 단어가 들어갈 수 있을까</a></p><p><strong>접근 방법</strong></p><ul><li>함수로 K길이의 1이 나오는지 확인한다 (가능한 공백은 1로 표시됨)<ul><li>확인할 문자열 check를 만들어둔다</li><li>현재 input으로 들어온 줄에서 1이 연속으로 나올 때 check에 넣어줌<ul><li>만약 K랑 길이가 같으면 cnt+1</li></ul></li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1979</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkK</span><span class="params">(current)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> cnt</span><br><span class="line">    <span class="keyword">if</span> Ks <span class="keyword">in</span> current :</span><br><span class="line">        check = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> check == <span class="string">''</span>:</span><br><span class="line">                <span class="keyword">if</span> current[i] == <span class="string">'1'</span>:</span><br><span class="line">                    check += <span class="string">'1'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> current[i] == <span class="string">'1'</span>:</span><br><span class="line">                    check += <span class="string">'1'</span></span><br><span class="line">                    <span class="keyword">if</span> i == N<span class="number">-1</span> <span class="keyword">and</span> len(check) == K:</span><br><span class="line">                        cnt += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> len(check) == K:</span><br><span class="line">                        cnt += <span class="number">1</span></span><br><span class="line">                        check = <span class="string">''</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        check = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># T = 1</span></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line">    board = [<span class="string">''</span>.join(input().split()) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    Ks = <span class="string">'1'</span>*K  <span class="comment"># 들어갈 수 있는 자리 길이 확인</span></span><br><span class="line">    cnt = <span class="number">0</span>     <span class="comment"># 들어갈 수 있는 자리의 총 갯수</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 가로로 확인하기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        checkK(board[i])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 세로로 확인하기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        col = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">            col += board[j][i]</span><br><span class="line">        checkK(col)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc,cnt))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/03/swea-python-1979/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1976. 시각 덧셈 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/03/swea-python-1976/</link>
      <guid>https://itzjamie96.github.io/2020/12/03/swea-python-1976/</guid>
      <pubDate>Thu, 03 Dec 2020 04:50:05 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PttaaAZIDFAUq&quot;&gt;1976. 시각 덧셈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a시 a분, b시 b분 입력받기&lt;/li&gt;
&lt;li&gt;a시 + b시&lt;/li&gt;
&lt;li&gt;a분 + b분&lt;ul&gt;
&lt;li&gt;만약 a분+b분이 60초과라면 시+1, a+b분-60&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;13시 부터는 다시 12 빼주는거 잊지말기&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PttaaAZIDFAUq">1976. 시각 덧셈</a></p><p><strong>접근 방법</strong></p><ul><li>a시 a분, b시 b분 입력받기</li><li>a시 + b시</li><li>a분 + b분<ul><li>만약 a분+b분이 60초과라면 시+1, a+b분-60</li></ul></li><li>13시 부터는 다시 12 빼주는거 잊지말기</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1976</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    h1, m1, h2, m2 = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    hour = h1+h2</span><br><span class="line">    <span class="keyword">if</span> hour &gt; <span class="number">12</span>:</span><br><span class="line">        hour -= <span class="number">12</span></span><br><span class="line"></span><br><span class="line">    minutes = m1+m2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> minutes &gt; <span class="number">60</span>:</span><br><span class="line">        minutes -= <span class="number">60</span></span><br><span class="line">        hour += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {} {}'</span>.format(tc, hour, minutes))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/03/swea-python-1976/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1970. 쉬운 거스름돈 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/02/swea-python-1970/</link>
      <guid>https://itzjamie96.github.io/2020/12/02/swea-python-1970/</guid>
      <pubDate>Wed, 02 Dec 2020 06:32:25 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PsIl6AXIDFAUq&quot;&gt;1970. 쉬운 거스름돈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;제약사항에 위배되는 input이 많음!&lt;/strong&gt;&lt;br&gt;&lt;del&gt;2. N의 마지막 자릿수는 항상 0이다. (ex : 32850)&lt;/del&gt; &amp;lt;&amp;lt; 이거에 해당되지 않는 input이 아주 많음 👉 그래서 모든 1의 자리 수를 0으로 바꿨다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;money: 돈 종류를 모두 담은 리스트 (큰 돈 ~ 작은 돈 순서로 정렬)&lt;/li&gt;
&lt;li&gt;result: money과 같은 길이의 리스트 (내용물 모두 0)&lt;/li&gt;
&lt;li&gt;money의 0번째부터 주어진 돈을 나눠봄&lt;ul&gt;
&lt;li&gt;나눴을 때 0이라면 안 나눠지는 것 =&amp;gt; i+1&lt;/li&gt;
&lt;li&gt;나눠지면 그 나머지가 N이 됨&lt;/li&gt;
&lt;li&gt;result[i]에는 몫이 들어감&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PsIl6AXIDFAUq">1970. 쉬운 거스름돈</a></p><p><strong>접근 방법</strong></p><blockquote><p><strong>제약사항에 위배되는 input이 많음!</strong><br><del>2. N의 마지막 자릿수는 항상 0이다. (ex : 32850)</del> &lt;&lt; 이거에 해당되지 않는 input이 아주 많음 👉 그래서 모든 1의 자리 수를 0으로 바꿨다</p></blockquote><ul><li>money: 돈 종류를 모두 담은 리스트 (큰 돈 ~ 작은 돈 순서로 정렬)</li><li>result: money과 같은 길이의 리스트 (내용물 모두 0)</li><li>money의 0번째부터 주어진 돈을 나눠봄<ul><li>나눴을 때 0이라면 안 나눠지는 것 =&gt; i+1</li><li>나눠지면 그 나머지가 N이 됨</li><li>result[i]에는 몫이 들어감</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1970</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 거스름돈</span></span><br><span class="line">    N = input()</span><br><span class="line">    N = int(N[:len(N)<span class="number">-1</span>]+<span class="string">'0'</span>)</span><br><span class="line">    <span class="comment"># print(N)</span></span><br><span class="line"></span><br><span class="line">    money = [<span class="number">50000</span>, <span class="number">10000</span>, <span class="number">5000</span>, <span class="number">1000</span>, <span class="number">500</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">10</span>]</span><br><span class="line">    result = [<span class="number">0</span>]*len(money)</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(money) <span class="keyword">or</span> N &gt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N // money[i] != <span class="number">0</span>:</span><br><span class="line">            result[i] += N//money[i]</span><br><span class="line">            N = N%money[i]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} '</span>.format(tc))</span><br><span class="line">    print(*result)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/02/swea-python-1970/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1966. 숫자를 정렬하자 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/25/swea-python-1966/</link>
      <guid>https://itzjamie96.github.io/2020/11/25/swea-python-1966/</guid>
      <pubDate>Tue, 24 Nov 2020 15:08:07 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PrmyKAWEDFAUq&quot;&gt;1966. 숫자를 정렬하자&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그냥 정렬한다! 라이브러리 만세&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PrmyKAWEDFAUq">1966. 숫자를 정렬하자</a></p><p><strong>접근 방법</strong></p><ul><li>그냥 정렬한다! 라이브러리 만세</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1966</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    arr = sorted(list(map(int, input().split())))</span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line">    print(*arr)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/25/swea-python-1966/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1961. 숫자 배열 회전 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/25/swea-python-1961/</link>
      <guid>https://itzjamie96.github.io/2020/11/25/swea-python-1961/</guid>
      <pubDate>Tue, 24 Nov 2020 15:02:05 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pq-OKAVYDFAUq&quot;&gt;1961. 숫자 배열 회전&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N*N 리스트 입력받기&lt;/li&gt;
&lt;li&gt;배열을 입력받아서 90도씩 회전시킨다&lt;/li&gt;
&lt;li&gt;회전 시킬 때&lt;ul&gt;
&lt;li&gt;새로운 배열을 항상 만든다 (답에서 회전한 모든 결과를 보여야하기 때문)&lt;/li&gt;
&lt;li&gt;i는 0부터 N까지 증가 &amp;amp; j는 N-1에서 0까지 감소할 때&lt;/li&gt;
&lt;li&gt;j번째 row의 N-1-i번째 col에 arr[i][j]값 넣기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pq-OKAVYDFAUq">1961. 숫자 배열 회전</a></p><p><strong>접근 방법</strong></p><ul><li>N*N 리스트 입력받기</li><li>배열을 입력받아서 90도씩 회전시킨다</li><li>회전 시킬 때<ul><li>새로운 배열을 항상 만든다 (답에서 회전한 모든 결과를 보여야하기 때문)</li><li>i는 0부터 N까지 증가 &amp; j는 N-1에서 0까지 감소할 때</li><li>j번째 row의 N-1-i번째 col에 arr[i][j]값 넣기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1961</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rotate</span><span class="params">(arr)</span>:</span></span><br><span class="line">    newArr = [[<span class="number">0</span>]*N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">            newArr[j][N<span class="number">-1</span>-i] = arr[i][j]</span><br><span class="line">    <span class="keyword">return</span> newArr</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    arr = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    a = rotate(arr)</span><br><span class="line">    b = rotate(a)</span><br><span class="line">    c = rotate(b)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(<span class="string">''</span>.join(map(str,a[i])), <span class="string">''</span>.join(map(str,b[i])), <span class="string">''</span>.join(map(str,c[i])))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/25/swea-python-1961/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1959. 두 개의 숫자열 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1959/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1959/</guid>
      <pubDate>Wed, 18 Nov 2020 13:51:32 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpoFaAS4DFAUq&quot;&gt;1959. 두 개의 숫자열&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;더 긴 쪽 구하기&lt;/li&gt;
&lt;li&gt;비교 가능한 횟수 i: long-short+1&lt;/li&gt;
&lt;li&gt;for i:&lt;ul&gt;
&lt;li&gt;short만큼 for loop (j)&lt;ul&gt;
&lt;li&gt;short[j] * long[i+j] 누적하기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if 현재 누적 &amp;gt; 기존 최대:&lt;ul&gt;
&lt;li&gt;기존 최대 갱신&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpoFaAS4DFAUq">1959. 두 개의 숫자열</a></p><p><strong>접근 방법</strong></p><ul><li>더 긴 쪽 구하기</li><li>비교 가능한 횟수 i: long-short+1</li><li>for i:<ul><li>short만큼 for loop (j)<ul><li>short[j] * long[i+j] 누적하기</li></ul></li><li>if 현재 누적 &gt; 기존 최대:<ul><li>기존 최대 갱신</li></ul></li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1959</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    nList = list(map(int, input().split()))</span><br><span class="line">    mList = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    maxi = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> N &gt; M:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">            tmp = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(M):</span><br><span class="line">                tmp += mList[j] * nList[i+j]</span><br><span class="line">            <span class="keyword">if</span> tmp &gt; maxi:</span><br><span class="line">                maxi = tmp</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(M - N+<span class="number">1</span>):</span><br><span class="line">            tmp = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">                tmp += nList[j] * mList[i + j]</span><br><span class="line">            <span class="keyword">if</span> tmp &gt; maxi:</span><br><span class="line">                maxi = tmp</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc,maxi))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1959/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1954. 달팽이 숫자 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1954/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1954/</guid>
      <pubDate>Wed, 18 Nov 2020 13:49:53 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq&quot;&gt;1954. 달팽이 숫자&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;br&gt;방향: right, down, left, up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N * N의 배열을 만든다&lt;/li&gt;
&lt;li&gt;반복문: 1 ~ N*N까지&lt;ul&gt;
&lt;li&gt;현재 x, y가 유효하면 print(i)&lt;/li&gt;
&lt;li&gt;안 유효하면 방향%4로 틀기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq">1954. 달팽이 숫자</a></p><p><strong>접근 방법</strong><br>방향: right, down, left, up</p><ul><li>N * N의 배열을 만든다</li><li>반복문: 1 ~ N*N까지<ul><li>현재 x, y가 유효하면 print(i)</li><li>안 유효하면 방향%4로 틀기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1954</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    snail = [[<span class="number">0</span>]*N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    x, y = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    i = <span class="number">2</span></span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    snail[x][y] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt;= N*N:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="number">-1</span>&lt;x+dx[d%<span class="number">4</span>]&lt;N <span class="keyword">and</span> <span class="number">-1</span>&lt;y+dy[d%<span class="number">4</span>]&lt;N <span class="keyword">and</span> snail[x+dx[d%<span class="number">4</span>]][y+dy[d%<span class="number">4</span>]] == <span class="number">0</span>:</span><br><span class="line">            x = x+dx[d%<span class="number">4</span>]</span><br><span class="line">            y = y+dy[d%<span class="number">4</span>]</span><br><span class="line">            snail[x][y] = i</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            d += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(*snail[i])</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1954/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1948. 날짜 계산기 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1948/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1948/</guid>
      <pubDate>Wed, 18 Nov 2020 13:43:11 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PnnU6AOsDFAUq&quot;&gt;1948. 날짜 계산기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 month(key)와 days(value)를 담은 딕셔너리 준비&lt;/li&gt;
&lt;li&gt;첫째 달(fm), 첫째 날짜(fd), 둘째 달(sm), 둘째 날짜(sd)를 입력받음&lt;/li&gt;
&lt;li&gt;같은 달 일 때 (fm==sm)&lt;ul&gt;
&lt;li&gt;둘째 day - 첫째 day + 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다른 달 일 때 (무조건 두번째 달이 더 큼)&lt;ul&gt;
&lt;li&gt;첫 번째 전체day - 첫째 day&lt;/li&gt;
&lt;li&gt;1 증가한 달의 day ~ 두번째 달 -1까지 day&lt;/li&gt;
&lt;li&gt;두번째 day&lt;/li&gt;
&lt;li&gt;위에 세개 합치기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PnnU6AOsDFAUq">1948. 날짜 계산기</a></p><p><strong>접근 방법</strong></p><ul><li>모든 month(key)와 days(value)를 담은 딕셔너리 준비</li><li>첫째 달(fm), 첫째 날짜(fd), 둘째 달(sm), 둘째 날짜(sd)를 입력받음</li><li>같은 달 일 때 (fm==sm)<ul><li>둘째 day - 첫째 day + 1</li></ul></li><li>다른 달 일 때 (무조건 두번째 달이 더 큼)<ul><li>첫 번째 전체day - 첫째 day</li><li>1 증가한 달의 day ~ 두번째 달 -1까지 day</li><li>두번째 day</li><li>위에 세개 합치기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1948</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">days = {</span><br><span class="line">    <span class="number">1</span>:<span class="number">31</span>, <span class="number">2</span>:<span class="number">28</span>, <span class="number">3</span>:<span class="number">31</span>, <span class="number">4</span>:<span class="number">30</span>, <span class="number">5</span>:<span class="number">31</span>, <span class="number">6</span>:<span class="number">30</span>,</span><br><span class="line">    <span class="number">7</span>:<span class="number">31</span>, <span class="number">8</span>:<span class="number">31</span>, <span class="number">9</span>:<span class="number">30</span>, <span class="number">10</span>:<span class="number">31</span>, <span class="number">11</span>:<span class="number">30</span>, <span class="number">12</span>:<span class="number">31</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    fm, fd, sm, sd = map(int, input().split())</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> fm == sm:</span><br><span class="line">        print(sd-fd+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        total = days[fm]-fd</span><br><span class="line">        <span class="keyword">for</span> month <span class="keyword">in</span> range(fm+<span class="number">1</span>, sm):</span><br><span class="line">            total += days[month]</span><br><span class="line">        total += sd</span><br><span class="line">        print(total+<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1948/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1946. 간단한 압축 풀기 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1946/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1946/</guid>
      <pubDate>Wed, 18 Nov 2020 13:39:23 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PmkDKAOMDFAUq&quot;&gt;1946. 간단한 압축 풀기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;result는 []&lt;/li&gt;
&lt;li&gt;alpha, n으로 매핑 받기&lt;/li&gt;
&lt;li&gt;n이 10의 배수면 n//10 만큼 alpha*10를 result에 추가해주기&lt;/li&gt;
&lt;li&gt;left가 0보다 크면 alpha*left를 result[-1]에 추가 후 n -= left&lt;/li&gt;
&lt;li&gt;아니라면 n//10만큼 ‘’에 넣어두고 공백이 얼만큼 남았는지 확인 (=left)&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PmkDKAOMDFAUq">1946. 간단한 압축 풀기</a></p><p><strong>접근 방법</strong></p><ul><li>result는 []</li><li>alpha, n으로 매핑 받기</li><li>n이 10의 배수면 n//10 만큼 alpha*10를 result에 추가해주기</li><li>left가 0보다 크면 alpha*left를 result[-1]에 추가 후 n -= left</li><li>아니라면 n//10만큼 ‘’에 넣어두고 공백이 얼만큼 남았는지 확인 (=left)</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1946</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    result = []</span><br><span class="line">    left = <span class="number">0</span>    <span class="comment">#left = 남은 공백</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        alpha, n = map(str, input().split())</span><br><span class="line">        n = int(n)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> left &gt; <span class="number">0</span>:</span><br><span class="line">            result[<span class="number">-1</span>] += alpha*left</span><br><span class="line">            n -= left</span><br><span class="line">            left = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n%<span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n//<span class="number">10</span>):</span><br><span class="line">                result.append(alpha*<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n//<span class="number">10</span>):</span><br><span class="line">                result.append(alpha*<span class="number">10</span>)</span><br><span class="line">            result.append(alpha*(n%<span class="number">10</span>))</span><br><span class="line">            left = <span class="number">10</span> - (n%<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    print(*result, sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1946/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1945. 간단한 소인수분해with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1945/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1945/</guid>
      <pubDate>Wed, 18 Nov 2020 10:24:05 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pl0Q6ANQDFAUq&quot;&gt;1945. 간단한 소인수분해&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N을 받는다&lt;/li&gt;
&lt;li&gt;2, 3, 5, 7, 11 로 N을 나눠본다&lt;ul&gt;
&lt;li&gt;나머지가 0이면 N = N//나눈 수&lt;/li&gt;
&lt;li&gt;a, b, c, d, e 중 해당하는 수에 +1 (리스트로 구하기)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pl0Q6ANQDFAUq">1945. 간단한 소인수분해</a></p><p><strong>접근 방법</strong></p><ul><li>N을 받는다</li><li>2, 3, 5, 7, 11 로 N을 나눠본다<ul><li>나머지가 0이면 N = N//나눈 수</li><li>a, b, c, d, e 중 해당하는 수에 +1 (리스트로 구하기)</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1945</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># a, b, c, d, e의 값들을 담을 리스트 </span></span><br><span class="line">    result = [<span class="number">0</span>]*<span class="number">5</span></span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># N을 나누고 나눠 1이 될 때까지 반복</span></span><br><span class="line">    <span class="comment"># 2~11 중의 숫자로 나눠떨어지면 N값을 갱신하고 </span></span><br><span class="line">    <span class="comment"># result에서 a~e중 해당되는 인덱스에 1씩 더해준다</span></span><br><span class="line">    <span class="keyword">while</span> N &gt; <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">2</span></span><br><span class="line">            result[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">3</span></span><br><span class="line">            result[<span class="number">1</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">5</span></span><br><span class="line">            result [<span class="number">2</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">7</span></span><br><span class="line">            result[<span class="number">3</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">11</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">11</span></span><br><span class="line">            result[<span class="number">4</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} '</span>.format(tc), end=<span class="string">''</span>)</span><br><span class="line">    print(*result)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1945/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
