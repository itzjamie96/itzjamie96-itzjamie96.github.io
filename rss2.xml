<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Code with Jamie</title>
    <link>https://itzjamie96.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 08 Dec 2020 15:21:11 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[SWEA] 1970. 쉬운 거스름돈 with Python</title>
      <link>https://itzjamie96.github.io/2020/12/02/swea-python-1970/</link>
      <guid>https://itzjamie96.github.io/2020/12/02/swea-python-1970/</guid>
      <pubDate>Wed, 02 Dec 2020 06:32:25 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PsIl6AXIDFAUq&quot;&gt;1970. 쉬운 거스름돈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;제약사항에 위배되는 input이 많음!&lt;/strong&gt;&lt;br&gt;&lt;del&gt;2. N의 마지막 자릿수는 항상 0이다. (ex : 32850)&lt;/del&gt; &amp;lt;&amp;lt; 이거에 해당되지 않는 input이 아주 많음 👉 그래서 모든 1의 자리 수를 0으로 바꿨다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;money: 돈 종류를 모두 담은 리스트 (큰 돈 ~ 작은 돈 순서로 정렬)&lt;/li&gt;
&lt;li&gt;result: money과 같은 길이의 리스트 (내용물 모두 0)&lt;/li&gt;
&lt;li&gt;money의 0번째부터 주어진 돈을 나눠봄&lt;ul&gt;
&lt;li&gt;나눴을 때 0이라면 안 나눠지는 것 =&amp;gt; i+1&lt;/li&gt;
&lt;li&gt;나눠지면 그 나머지가 N이 됨&lt;/li&gt;
&lt;li&gt;result[i]에는 몫이 들어감&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PsIl6AXIDFAUq">1970. 쉬운 거스름돈</a></p><p><strong>접근 방법</strong></p><blockquote><p><strong>제약사항에 위배되는 input이 많음!</strong><br><del>2. N의 마지막 자릿수는 항상 0이다. (ex : 32850)</del> &lt;&lt; 이거에 해당되지 않는 input이 아주 많음 👉 그래서 모든 1의 자리 수를 0으로 바꿨다</p></blockquote><ul><li>money: 돈 종류를 모두 담은 리스트 (큰 돈 ~ 작은 돈 순서로 정렬)</li><li>result: money과 같은 길이의 리스트 (내용물 모두 0)</li><li>money의 0번째부터 주어진 돈을 나눠봄<ul><li>나눴을 때 0이라면 안 나눠지는 것 =&gt; i+1</li><li>나눠지면 그 나머지가 N이 됨</li><li>result[i]에는 몫이 들어감</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1970</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 거스름돈</span></span><br><span class="line">    N = input()</span><br><span class="line">    N = int(N[:len(N)<span class="number">-1</span>]+<span class="string">'0'</span>)</span><br><span class="line">    <span class="comment"># print(N)</span></span><br><span class="line"></span><br><span class="line">    money = [<span class="number">50000</span>, <span class="number">10000</span>, <span class="number">5000</span>, <span class="number">1000</span>, <span class="number">500</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">10</span>]</span><br><span class="line">    result = [<span class="number">0</span>]*len(money)</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(money) <span class="keyword">or</span> N &gt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N // money[i] != <span class="number">0</span>:</span><br><span class="line">            result[i] += N//money[i]</span><br><span class="line">            N = N%money[i]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} '</span>.format(tc))</span><br><span class="line">    print(*result)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/12/02/swea-python-1970/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1966. 숫자를 정렬하자 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/25/swea-python-1966/</link>
      <guid>https://itzjamie96.github.io/2020/11/25/swea-python-1966/</guid>
      <pubDate>Tue, 24 Nov 2020 15:08:07 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PrmyKAWEDFAUq&quot;&gt;1966. 숫자를 정렬하자&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그냥 정렬한다! 라이브러리 만세&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PrmyKAWEDFAUq">1966. 숫자를 정렬하자</a></p><p><strong>접근 방법</strong></p><ul><li>그냥 정렬한다! 라이브러리 만세</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1966</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    arr = sorted(list(map(int, input().split())))</span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line">    print(*arr)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/25/swea-python-1966/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1961. 숫자 배열 회전 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/25/swea-python-1961/</link>
      <guid>https://itzjamie96.github.io/2020/11/25/swea-python-1961/</guid>
      <pubDate>Tue, 24 Nov 2020 15:02:05 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pq-OKAVYDFAUq&quot;&gt;1961. 숫자 배열 회전&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N*N 리스트 입력받기&lt;/li&gt;
&lt;li&gt;배열을 입력받아서 90도씩 회전시킨다&lt;/li&gt;
&lt;li&gt;회전 시킬 때&lt;ul&gt;
&lt;li&gt;새로운 배열을 항상 만든다 (답에서 회전한 모든 결과를 보여야하기 때문)&lt;/li&gt;
&lt;li&gt;i는 0부터 N까지 증가 &amp;amp; j는 N-1에서 0까지 감소할 때&lt;/li&gt;
&lt;li&gt;j번째 row의 N-1-i번째 col에 arr[i][j]값 넣기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pq-OKAVYDFAUq">1961. 숫자 배열 회전</a></p><p><strong>접근 방법</strong></p><ul><li>N*N 리스트 입력받기</li><li>배열을 입력받아서 90도씩 회전시킨다</li><li>회전 시킬 때<ul><li>새로운 배열을 항상 만든다 (답에서 회전한 모든 결과를 보여야하기 때문)</li><li>i는 0부터 N까지 증가 &amp; j는 N-1에서 0까지 감소할 때</li><li>j번째 row의 N-1-i번째 col에 arr[i][j]값 넣기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1961</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rotate</span><span class="params">(arr)</span>:</span></span><br><span class="line">    newArr = [[<span class="number">0</span>]*N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">            newArr[j][N<span class="number">-1</span>-i] = arr[i][j]</span><br><span class="line">    <span class="keyword">return</span> newArr</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    arr = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    a = rotate(arr)</span><br><span class="line">    b = rotate(a)</span><br><span class="line">    c = rotate(b)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(<span class="string">''</span>.join(map(str,a[i])), <span class="string">''</span>.join(map(str,b[i])), <span class="string">''</span>.join(map(str,c[i])))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/25/swea-python-1961/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1959. 두 개의 숫자열 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1959/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1959/</guid>
      <pubDate>Wed, 18 Nov 2020 13:51:32 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpoFaAS4DFAUq&quot;&gt;1959. 두 개의 숫자열&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;더 긴 쪽 구하기&lt;/li&gt;
&lt;li&gt;비교 가능한 횟수 i: long-short+1&lt;/li&gt;
&lt;li&gt;for i:&lt;ul&gt;
&lt;li&gt;short만큼 for loop (j)&lt;ul&gt;
&lt;li&gt;short[j] * long[i+j] 누적하기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if 현재 누적 &amp;gt; 기존 최대:&lt;ul&gt;
&lt;li&gt;기존 최대 갱신&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpoFaAS4DFAUq">1959. 두 개의 숫자열</a></p><p><strong>접근 방법</strong></p><ul><li>더 긴 쪽 구하기</li><li>비교 가능한 횟수 i: long-short+1</li><li>for i:<ul><li>short만큼 for loop (j)<ul><li>short[j] * long[i+j] 누적하기</li></ul></li><li>if 현재 누적 &gt; 기존 최대:<ul><li>기존 최대 갱신</li></ul></li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1959</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    nList = list(map(int, input().split()))</span><br><span class="line">    mList = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    maxi = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> N &gt; M:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">            tmp = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(M):</span><br><span class="line">                tmp += mList[j] * nList[i+j]</span><br><span class="line">            <span class="keyword">if</span> tmp &gt; maxi:</span><br><span class="line">                maxi = tmp</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(M - N+<span class="number">1</span>):</span><br><span class="line">            tmp = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">                tmp += nList[j] * mList[i + j]</span><br><span class="line">            <span class="keyword">if</span> tmp &gt; maxi:</span><br><span class="line">                maxi = tmp</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc,maxi))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1959/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1954. 달팽이 숫자 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1954/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1954/</guid>
      <pubDate>Wed, 18 Nov 2020 13:49:53 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq&quot;&gt;1954. 달팽이 숫자&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;br&gt;방향: right, down, left, up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N * N의 배열을 만든다&lt;/li&gt;
&lt;li&gt;반복문: 1 ~ N*N까지&lt;ul&gt;
&lt;li&gt;현재 x, y가 유효하면 print(i)&lt;/li&gt;
&lt;li&gt;안 유효하면 방향%4로 틀기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq">1954. 달팽이 숫자</a></p><p><strong>접근 방법</strong><br>방향: right, down, left, up</p><ul><li>N * N의 배열을 만든다</li><li>반복문: 1 ~ N*N까지<ul><li>현재 x, y가 유효하면 print(i)</li><li>안 유효하면 방향%4로 틀기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1954</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    snail = [[<span class="number">0</span>]*N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    x, y = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    i = <span class="number">2</span></span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    snail[x][y] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt;= N*N:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="number">-1</span>&lt;x+dx[d%<span class="number">4</span>]&lt;N <span class="keyword">and</span> <span class="number">-1</span>&lt;y+dy[d%<span class="number">4</span>]&lt;N <span class="keyword">and</span> snail[x+dx[d%<span class="number">4</span>]][y+dy[d%<span class="number">4</span>]] == <span class="number">0</span>:</span><br><span class="line">            x = x+dx[d%<span class="number">4</span>]</span><br><span class="line">            y = y+dy[d%<span class="number">4</span>]</span><br><span class="line">            snail[x][y] = i</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            d += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(*snail[i])</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1954/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1948. 날짜 계산기 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1948/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1948/</guid>
      <pubDate>Wed, 18 Nov 2020 13:43:11 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PnnU6AOsDFAUq&quot;&gt;1948. 날짜 계산기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 month(key)와 days(value)를 담은 딕셔너리 준비&lt;/li&gt;
&lt;li&gt;첫째 달(fm), 첫째 날짜(fd), 둘째 달(sm), 둘째 날짜(sd)를 입력받음&lt;/li&gt;
&lt;li&gt;같은 달 일 때 (fm==sm)&lt;ul&gt;
&lt;li&gt;둘째 day - 첫째 day + 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다른 달 일 때 (무조건 두번째 달이 더 큼)&lt;ul&gt;
&lt;li&gt;첫 번째 전체day - 첫째 day&lt;/li&gt;
&lt;li&gt;1 증가한 달의 day ~ 두번째 달 -1까지 day&lt;/li&gt;
&lt;li&gt;두번째 day&lt;/li&gt;
&lt;li&gt;위에 세개 합치기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PnnU6AOsDFAUq">1948. 날짜 계산기</a></p><p><strong>접근 방법</strong></p><ul><li>모든 month(key)와 days(value)를 담은 딕셔너리 준비</li><li>첫째 달(fm), 첫째 날짜(fd), 둘째 달(sm), 둘째 날짜(sd)를 입력받음</li><li>같은 달 일 때 (fm==sm)<ul><li>둘째 day - 첫째 day + 1</li></ul></li><li>다른 달 일 때 (무조건 두번째 달이 더 큼)<ul><li>첫 번째 전체day - 첫째 day</li><li>1 증가한 달의 day ~ 두번째 달 -1까지 day</li><li>두번째 day</li><li>위에 세개 합치기</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1948</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">days = {</span><br><span class="line">    <span class="number">1</span>:<span class="number">31</span>, <span class="number">2</span>:<span class="number">28</span>, <span class="number">3</span>:<span class="number">31</span>, <span class="number">4</span>:<span class="number">30</span>, <span class="number">5</span>:<span class="number">31</span>, <span class="number">6</span>:<span class="number">30</span>,</span><br><span class="line">    <span class="number">7</span>:<span class="number">31</span>, <span class="number">8</span>:<span class="number">31</span>, <span class="number">9</span>:<span class="number">30</span>, <span class="number">10</span>:<span class="number">31</span>, <span class="number">11</span>:<span class="number">30</span>, <span class="number">12</span>:<span class="number">31</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    fm, fd, sm, sd = map(int, input().split())</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> fm == sm:</span><br><span class="line">        print(sd-fd+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        total = days[fm]-fd</span><br><span class="line">        <span class="keyword">for</span> month <span class="keyword">in</span> range(fm+<span class="number">1</span>, sm):</span><br><span class="line">            total += days[month]</span><br><span class="line">        total += sd</span><br><span class="line">        print(total+<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1948/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1946. 간단한 압축 풀기 with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1946/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1946/</guid>
      <pubDate>Wed, 18 Nov 2020 13:39:23 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PmkDKAOMDFAUq&quot;&gt;1946. 간단한 압축 풀기&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;result는 []&lt;/li&gt;
&lt;li&gt;alpha, n으로 매핑 받기&lt;/li&gt;
&lt;li&gt;n이 10의 배수면 n//10 만큼 alpha*10를 result에 추가해주기&lt;/li&gt;
&lt;li&gt;left가 0보다 크면 alpha*left를 result[-1]에 추가 후 n -= left&lt;/li&gt;
&lt;li&gt;아니라면 n//10만큼 ‘’에 넣어두고 공백이 얼만큼 남았는지 확인 (=left)&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PmkDKAOMDFAUq">1946. 간단한 압축 풀기</a></p><p><strong>접근 방법</strong></p><ul><li>result는 []</li><li>alpha, n으로 매핑 받기</li><li>n이 10의 배수면 n//10 만큼 alpha*10를 result에 추가해주기</li><li>left가 0보다 크면 alpha*left를 result[-1]에 추가 후 n -= left</li><li>아니라면 n//10만큼 ‘’에 넣어두고 공백이 얼만큼 남았는지 확인 (=left)</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1946</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    result = []</span><br><span class="line">    left = <span class="number">0</span>    <span class="comment">#left = 남은 공백</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        alpha, n = map(str, input().split())</span><br><span class="line">        n = int(n)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> left &gt; <span class="number">0</span>:</span><br><span class="line">            result[<span class="number">-1</span>] += alpha*left</span><br><span class="line">            n -= left</span><br><span class="line">            left = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n%<span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n//<span class="number">10</span>):</span><br><span class="line">                result.append(alpha*<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n//<span class="number">10</span>):</span><br><span class="line">                result.append(alpha*<span class="number">10</span>)</span><br><span class="line">            result.append(alpha*(n%<span class="number">10</span>))</span><br><span class="line">            left = <span class="number">10</span> - (n%<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc))</span><br><span class="line">    print(*result, sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1946/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1945. 간단한 소인수분해with Python</title>
      <link>https://itzjamie96.github.io/2020/11/18/swea-python-1945/</link>
      <guid>https://itzjamie96.github.io/2020/11/18/swea-python-1945/</guid>
      <pubDate>Wed, 18 Nov 2020 10:24:05 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pl0Q6ANQDFAUq&quot;&gt;1945. 간단한 소인수분해&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N을 받는다&lt;/li&gt;
&lt;li&gt;2, 3, 5, 7, 11 로 N을 나눠본다&lt;ul&gt;
&lt;li&gt;나머지가 0이면 N = N//나눈 수&lt;/li&gt;
&lt;li&gt;a, b, c, d, e 중 해당하는 수에 +1 (리스트로 구하기)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pl0Q6ANQDFAUq">1945. 간단한 소인수분해</a></p><p><strong>접근 방법</strong></p><ul><li>N을 받는다</li><li>2, 3, 5, 7, 11 로 N을 나눠본다<ul><li>나머지가 0이면 N = N//나눈 수</li><li>a, b, c, d, e 중 해당하는 수에 +1 (리스트로 구하기)</li></ul></li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1945</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># a, b, c, d, e의 값들을 담을 리스트 </span></span><br><span class="line">    result = [<span class="number">0</span>]*<span class="number">5</span></span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># N을 나누고 나눠 1이 될 때까지 반복</span></span><br><span class="line">    <span class="comment"># 2~11 중의 숫자로 나눠떨어지면 N값을 갱신하고 </span></span><br><span class="line">    <span class="comment"># result에서 a~e중 해당되는 인덱스에 1씩 더해준다</span></span><br><span class="line">    <span class="keyword">while</span> N &gt; <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">2</span></span><br><span class="line">            result[<span class="number">0</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">3</span></span><br><span class="line">            result[<span class="number">1</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">5</span></span><br><span class="line">            result [<span class="number">2</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">7</span></span><br><span class="line">            result[<span class="number">3</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> N % <span class="number">11</span> == <span class="number">0</span>:</span><br><span class="line">            N = N//<span class="number">11</span></span><br><span class="line">            result[<span class="number">4</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} '</span>.format(tc), end=<span class="string">''</span>)</span><br><span class="line">    print(*result)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/18/swea-python-1945/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1940. 가랏! RC카! with Python</title>
      <link>https://itzjamie96.github.io/2020/11/17/swea-python-1940/</link>
      <guid>https://itzjamie96.github.io/2020/11/17/swea-python-1940/</guid>
      <pubDate>Mon, 16 Nov 2020 16:04:28 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PjMgaALgDFAUq&quot;&gt;1940. 가랏! RC카!&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이해하느라 오조오억년 걸린 문제…&lt;span class=&quot;github-emoji&quot; style=&quot;color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8) center/contain&quot; data-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8&quot;&gt;😿&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a, b가 있으면 a가 command고 b가 속도 였다ㅠ&lt;/li&gt;
&lt;li&gt;speed = 0에서 시작하는 기존 속도&lt;/li&gt;
&lt;li&gt;a가&lt;ul&gt;
&lt;li&gt;1일 때(가속) speed + b&lt;/li&gt;
&lt;li&gt;2일 때(감속) speed가 b보다 작으면 speed = 0&lt;br&gt;  아니면 speed - b&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if가 다 끝난 후 전체 거리에 speed를 더해준다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PjMgaALgDFAUq">1940. 가랏! RC카!</a></p><blockquote><p>이해하느라 오조오억년 걸린 문제…<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f63f.png?v8">😿</span></p></blockquote><p><strong>접근 방법</strong></p><ul><li>a, b가 있으면 a가 command고 b가 속도 였다ㅠ</li><li>speed = 0에서 시작하는 기존 속도</li><li>a가<ul><li>1일 때(가속) speed + b</li><li>2일 때(감속) speed가 b보다 작으면 speed = 0<br>  아니면 speed - b</li></ul></li><li>if가 다 끝난 후 전체 거리에 speed를 더해준다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1940</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line"></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    speed = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        commands = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 가속일 때</span></span><br><span class="line">        <span class="keyword">if</span> commands[<span class="number">0</span>] == <span class="number">1</span>:</span><br><span class="line">            speed += commands[<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 감속일 때</span></span><br><span class="line">        <span class="keyword">elif</span> commands[<span class="number">0</span>] == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> speed &lt; commands[<span class="number">1</span>]:</span><br><span class="line">                speed = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                speed -= commands[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        total += speed</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, total))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/17/swea-python-1940/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Python] Memoization(메모이제이션)</title>
      <link>https://itzjamie96.github.io/2020/11/15/python-absolute-basics-of-memoization/</link>
      <guid>https://itzjamie96.github.io/2020/11/15/python-absolute-basics-of-memoization/</guid>
      <pubDate>Sun, 15 Nov 2020 03:14:56 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;재귀함수로 문제를 풀다 보면 재귀를 썼음에도 불가하고 시간초과(!)가 나는 경우들이 있다. 이럴 때 시간을 단축시킬 수 있는 Memoization(메모이제이션)에 대해서 알아보자.&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><blockquote><p>재귀함수로 문제를 풀다 보면 재귀를 썼음에도 불가하고 시간초과(!)가 나는 경우들이 있다. 이럴 때 시간을 단축시킬 수 있는 Memoization(메모이제이션)에 대해서 알아보자.</p></blockquote><a id="more"></a><h2 id="Memoization이란"><a href="#Memoization이란" class="headerlink" title="Memoization이란?"></a>Memoization이란?</h2><p>Memoization은 컴퓨터 프로그램이 동일한 계산을 반복해야 할 때, <del>이전에 계산한 값을 메모리에 저장</del>함으로써 동일한 계산의 반복 수행을 제거하여 프로그램 실행 속도를 빠르게 하는 기술이다. 동적 계획법의 핵심이 되는 기술이다. (출처: 위키백과 <a href="https://ko.wikipedia.org/wiki/%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98#:~:text=%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98(memoization)%EC%9D%80%20%EC%BB%B4%ED%93%A8%ED%84%B0,%ED%95%B5%EC%8B%AC%EC%9D%B4%20%EB%90%98%EB%8A%94%20%EA%B8%B0%EC%88%A0%EC%9D%B4%EB%8B%A4.">메모이제이션</a>)</p><p>단어 <strong>Memoization</strong>만 봐도 <del>Memo</del>화하는 것이라는 걸 알 수 있다. 쉽게 말해 어떤 파라미터 A를 이용한 함수가 호출됐을 때의 <del>output을 메모</del>해뒀다가 나중에 또 A를 이용한 함수의 호출이 있을 때 메모해둔 값을 그대로 불러오는 것이다. 이렇게 되면 A에 대한 연산을 두 번 이상 할 필요가 없어져서 시간이 훅! 줄어들게 된다. </p><p>단, 파라미터 A에 대해서 <del>항상 같은 output</del>이 나올 때만 사용할 수 있다. 어떤 함수 <code>func()</code>에 파라미터 A가 입력됐을 때 결과가 B도 되고 C도 되어버리면 나중에 메모해둔 값을 꺼낼 때 A에 대해 B를 꺼내야 할지, C를 꺼내야 할지 알 수 없기 때문이다. </p><h2 id="Memoization-in-Python"><a href="#Memoization-in-Python" class="headerlink" title="Memoization in Python"></a>Memoization in Python</h2><p>파이썬에서는 이 <del>메모</del>를 하기 위해 <del>딕셔너리</del>를 활용한다. 딕셔너리 데이터 타입을 보면 <code>{ key : value }</code>꼴로 저장이 되는 데, key에 <em>함수(파라미터)</em>를 넣고 value에 해당 함수의 output을 넣어주면 된다. </p><p>간단하게 memoization을 활용해 팩토리얼을 구하는 법을 알아보자.</p><figure class="highlight python"><figcaption><span>Factorial Example</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">factorial_memo = {}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n&lt;<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">not</span> <span class="keyword">in</span> factorial_memo:</span><br><span class="line">        factorial_memo[n] = n * factorial(n<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> factorial_memo[n]</span><br><span class="line"></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line">print(factorial(n))</span><br></pre></td></tr></tbody></table></figure><p>위 함수가 동작하는 방법은 아래와 같다.</p><br><p><img src="https://user-images.githubusercontent.com/53888115/97662447-7a1ea500-1aba-11eb-960a-ccf73d25c9a7.gif" alt="Factorial with Memoization"></p><p>왼쪽은 시스템 스택, 오른쪽은 메모이제이션을 위해 만들어둔 메모장 딕셔너리다. <code>factorial</code> 메소드에 파라미터 <code>n</code>이 들어오면, 먼저 <strong>시스템 스택</strong>에 쌓인다.<br><code>factorial(n)</code>은 <strong>memo</strong>라는 딕셔너리에 key가 <code>n</code>일 때 value를 <code>n*factorial(n-1)</code>로 저장한다. 이렇게 되면 memo에 있는 <code>n</code>에 대해서는 <code>factorial(n)</code>을 또다시 연산할 필요 없이 그냥 memo에서 해당 key에 대한 value 값만 찾으면 된다. </p><p>이미 저장해둔 값만 찾아내면 되니 빨라진다는 건 알겠는 데, 과연 얼마나 빨라질까? 직접 확인해보자!</p><figure class="highlight python"><figcaption><span>compare factorials</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 메모장!</span></span><br><span class="line">factorial_memo = {}</span><br><span class="line"></span><br><span class="line"><span class="comment"># memoization을 이용한 팩토리얼</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial_with_memo</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n&lt;<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">not</span> <span class="keyword">in</span> factorial_memo:</span><br><span class="line">        factorial_memo[n] = n * factorial_with_memo(n - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> factorial_memo[n]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 그냥 팩토리얼</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#####################팩토리얼 100!을 1000번 반복해보기#####################</span></span><br><span class="line"><span class="keyword">from</span> timeit <span class="keyword">import</span>  *</span><br><span class="line">t1 = Timer(<span class="string">"factorial_with_memo(100)"</span>, <span class="string">"from __main__ import factorial_with_memo"</span>).timeit(number=<span class="number">1000</span>)</span><br><span class="line">t2 = Timer(<span class="string">"factorial(100)"</span>, <span class="string">"from __main__ import factorial"</span>).timeit(number=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">print(t1, <span class="string">"vs"</span>, t2)</span><br><span class="line"><span class="comment"># 결과 : 0.0002186 vs 0.017931199999999998</span></span><br><span class="line"><span class="comment"># (시간 단위: 초)</span></span><br></pre></td></tr></tbody></table></figure><p>위의 코드를 통해 memoization을 쓴 팩토리얼 함수와 그냥 재귀로 만든 팩토리얼 함수의 속도를 비교해봤다. <del>팩토리얼 100을 1000번</del> 정도 돌리면 걸리는 시간과 연산이 어마어마할 것이다. 하지만 결과를 보면 알겠지만 memoization을 사용하면 <del>아주! 빠른 속도</del>로 값을 알아낼 수가 있다! <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span> </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/11/15/python-absolute-basics-of-memoization/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1926. 간단한 369 게임 with Python</title>
      <link>https://itzjamie96.github.io/2020/10/22/swea-python-1926-ps/</link>
      <guid>https://itzjamie96.github.io/2020/10/22/swea-python-1926-ps/</guid>
      <pubDate>Thu, 22 Oct 2020 13:12:20 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PTeo6AHUDFAUq&quot;&gt;1926. 간단한 369게임&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 ~ N까지 str형태로 리스트를 만든다&lt;/li&gt;
&lt;li&gt;현재 값에 3, 6, 9가 포함되어있다면:&lt;ul&gt;
&lt;li&gt;현재 값에서 3, 6, 9의 갯수를 카운트&lt;/li&gt;
&lt;li&gt;‘-‘ *갯수 출력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;369 아니면 그냥 출력&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PTeo6AHUDFAUq">1926. 간단한 369게임</a></p><p><strong>접근 방법</strong></p><ul><li>1 ~ N까지 str형태로 리스트를 만든다</li><li>현재 값에 3, 6, 9가 포함되어있다면:<ul><li>현재 값에서 3, 6, 9의 갯수를 카운트</li><li>‘-‘ *갯수 출력</li></ul></li><li>369 아니면 그냥 출력</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1926. 간단한 369 게임</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">nList = [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nList:</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'3'</span> <span class="keyword">in</span> num:</span><br><span class="line">        cnt += num.count(<span class="string">'3'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'6'</span> <span class="keyword">in</span> num:</span><br><span class="line">        cnt += num.count(<span class="string">'6'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'9'</span> <span class="keyword">in</span> num:</span><br><span class="line">        cnt += num.count(<span class="string">'9'</span>)</span><br><span class="line">    <span class="keyword">if</span> cnt &gt; <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'-'</span>*cnt, end=<span class="string">' '</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(num, end=<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/22/swea-python-1926-ps/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1859. 백만 장자 프로젝트 with Python</title>
      <link>https://itzjamie96.github.io/2020/10/21/swea-python-1859-ps/</link>
      <guid>https://itzjamie96.github.io/2020/10/21/swea-python-1859-ps/</guid>
      <pubDate>Wed, 21 Oct 2020 06:28:20 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc&quot;&gt;1859. 백만 장자 프로젝트&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;맨 마지막 날은 어쨌든 팔아야하니까 keep한다 (sellingPrice)&lt;/li&gt;
&lt;li&gt;N-2번째부터 뒤로 for문을 돌린다 (방금 N-1은 keep 했으니까)&lt;/li&gt;
&lt;li&gt;하나씩 이동하면서 만약 현재 값이 sellingPrice 보다 작으면 (-현재 값) + sellingPrice를 result에 더해준다&lt;/li&gt;
&lt;li&gt;만약 현재 값이 sellingPrice보다 크면 그 값으로 sellingPrice를 갱신해준다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LrsUaDxcDFAXc">1859. 백만 장자 프로젝트</a></p><p><strong>접근 방법</strong></p><ul><li>맨 마지막 날은 어쨌든 팔아야하니까 keep한다 (sellingPrice)</li><li>N-2번째부터 뒤로 for문을 돌린다 (방금 N-1은 keep 했으니까)</li><li>하나씩 이동하면서 만약 현재 값이 sellingPrice 보다 작으면 (-현재 값) + sellingPrice를 result에 더해준다</li><li>만약 현재 값이 sellingPrice보다 크면 그 값으로 sellingPrice를 갱신해준다</li></ul><a id="more"></a><br><figure class="highlight python"><figcaption><span>1859. 백만 장자 프로젝트</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    prices = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    sellingPrice = prices[N<span class="number">-1</span>]</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">if</span> prices[i] &gt; sellingPrice:</span><br><span class="line">            sellingPrice = prices[i]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += -prices[i] + sellingPrice</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, result))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/21/swea-python-1859-ps/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 파이썬 SW 문제해결 기본: String</title>
      <link>https://itzjamie96.github.io/2020/10/20/swea-python-ps-string/</link>
      <guid>https://itzjamie96.github.io/2020/10/20/swea-python-ps-string/</guid>
      <pubDate>Tue, 20 Oct 2020 14:46:07 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;amp;subjectId=AWOVGOEKqeoDFAWg&quot;&gt;[문제링크] 파이썬 SW 문제해결 기본 - String&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4864-문자열-비교&quot;&gt;&lt;a href=&quot;#4864-문자열-비교&quot; class=&quot;headerlink&quot; title=&quot;[4864] 문자열 비교&quot;&gt;&lt;/a&gt;[4864] 문자열 비교&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;br&gt;str2안에 str1이 있는지 확인한다..!&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;figcaption&gt;&lt;span&gt;문자열 비교&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T = int(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; tc &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, T+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str1 = input()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str2 = input()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; str1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; str2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;#{} 1&#39;&lt;/span&gt;.format(tc))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;#{} 0&#39;&lt;/span&gt;.format(tc))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVGOEKqeoDFAWg">[문제링크] 파이썬 SW 문제해결 기본 - String</a></p><h2 id="4864-문자열-비교"><a href="#4864-문자열-비교" class="headerlink" title="[4864] 문자열 비교"></a>[4864] 문자열 비교</h2><p><strong>접근 방법</strong><br>str2안에 str1이 있는지 확인한다..!</p><figure class="highlight python"><figcaption><span>문자열 비교</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    str1 = input()</span><br><span class="line">    str2 = input()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str1 <span class="keyword">in</span> str2:</span><br><span class="line">        print(<span class="string">'#{} 1'</span>.format(tc))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'#{} 0'</span>.format(tc))</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><br><h2 id="4861-회문"><a href="#4861-회문" class="headerlink" title="[4861] 회문"></a>[4861] 회문</h2><p><strong>접근 방법</strong></p><ol><li>주어진 문자열들을 입력받는다.</li><li>(가로) 입력 받은 문자열 중 회문이 있는지 확인한다.<ul><li>만약 이 단계에서 가로 회문이 찾아진다면 바로 끝내면 된다.</li></ul></li><li>가로에서 못찾았다면 세로 회문을 찾는 함수를 돌린다.</li><li>(세로) 고정된 index값과 M만큼 증가하는 row를 기준으로 세로값들을 임시 배열에 저장한다.</li><li>만약 현재의 임시배열이 회문이면 끝낸다. (아니라면 반복)</li></ol><figure class="highlight python"><figcaption><span>회문</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 세로로 된 회문을 찾는 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findVertical</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 임시 리스트 생성</span></span><br><span class="line">        tmp = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(M):</span><br><span class="line">                tmp.append(board[k+i][j])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 만약 리스트의 현재 길이가 M이고 회문이라면 종료</span></span><br><span class="line">            <span class="keyword">if</span> len(tmp) == M <span class="keyword">and</span> tmp == tmp[::<span class="number">-1</span>]:</span><br><span class="line">                <span class="keyword">return</span> tmp</span><br><span class="line">            <span class="comment"># if문에서 종료하지 않았다면 임시 리스트를 비워준다</span></span><br><span class="line">            tmp.clear()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    board = []</span><br><span class="line">    isDone = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="comment">#board에 넣기 전 잠시 임시변수에 문자열을 담아둔다</span></span><br><span class="line">        tmp = list(map(str, input()))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 만약 가로 회문이 존재한다면 바로 끝낸다.</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> tmp[i:] == tmp[i:][::<span class="number">-1</span>]:</span><br><span class="line">                print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line">                print(*tmp[i:], sep=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># for문을 끝내기 위한 flag변수</span></span><br><span class="line">                isDone = <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 가로회문이 존재하지 않아 종료되지 않았다면 세로 변수를 찾아야하니 board에 넣어준다</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            board.append(tmp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 가로 통과 못했을 때만 세로 확인</span></span><br><span class="line">    <span class="keyword">if</span> isDone == <span class="literal">False</span>:</span><br><span class="line">        vertical = findVertical()</span><br><span class="line">        print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line">        print(*vertical, sep=<span class="string">''</span>)</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4865-글자수"><a href="#4865-글자수" class="headerlink" title="[4865] 글자수"></a>[4865] 글자수</h2><p><strong>접근 방법</strong></p><ol><li>str1을 set으로 받는다 (중복제거)</li><li>str1애들로 딕셔너리를 만든다</li><li>str1의 각 요소에 대해서 str2에 몇개씩 있는지 카운트 후 딕셔너리에 추가한다</li><li>딕셔너리의 value중 가장 큰 값을 출력한다</li></ol><figure class="highlight python"><figcaption><span>글자수</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    <span class="comment">#중복 제거를 위해 set으로 받는다</span></span><br><span class="line">    str1 = set(input()) </span><br><span class="line">    str2 = input()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 중복된 요소를 셀 dictionary</span></span><br><span class="line">    countAlpha = {}</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> alphabet <span class="keyword">in</span> str2:</span><br><span class="line">        <span class="keyword">if</span> alphabet <span class="keyword">in</span> str1:</span><br><span class="line">            <span class="comment"># 이미 있는 key라면 value+1을 해준다</span></span><br><span class="line">            <span class="keyword">if</span> alphabet <span class="keyword">in</span> countAlpha.keys():</span><br><span class="line">                value = countAlpha.get(alphabet)</span><br><span class="line">                countAlpha[alphabet] = value+<span class="number">1</span></span><br><span class="line">            <span class="comment"># 없는 key는 value에 1을 넣어준다</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                countAlpha[alphabet] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, max(countAlpha.values())))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/20/swea-python-ps-string/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 파이썬 SW 문제해결 기본: List2</title>
      <link>https://itzjamie96.github.io/2020/10/20/swea-python-ps-list2/</link>
      <guid>https://itzjamie96.github.io/2020/10/20/swea-python-ps-list2/</guid>
      <pubDate>Tue, 20 Oct 2020 00:21:42 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;amp;subjectId=AWOVF-WqqecDFAWg&amp;amp;&amp;amp;&quot;&gt;[문제링크] 파이썬 SW 문제해결 기본 - LIST2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4836-색칠하기&quot;&gt;&lt;a href=&quot;#4836-색칠하기&quot; class=&quot;headerlink&quot; title=&quot;[4836] 색칠하기&quot;&gt;&lt;/a&gt;[4836] 색칠하기&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;먼저 10*10 보드판 생성&lt;/li&gt;
&lt;li&gt;p1(왼쪽위), p2(오른쪽아래) 좌표 값 받기&lt;ul&gt;
&lt;li&gt;가로: p1[0] ~ p2[0]&lt;/li&gt;
&lt;li&gt;세로: p1[0] ~ p2[1]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;가로 세로 가지고 for문으로 색칠할 값을 “더해주기”&lt;/li&gt;
&lt;li&gt;겹치는 부분 = 빨강+파랑 = 3&lt;/li&gt;
&lt;li&gt;보드판에서 겹치는 영역 카운팅하기&lt;/li&gt;
&lt;/ol&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVF-WqqecDFAWg&amp;&amp;">[문제링크] 파이썬 SW 문제해결 기본 - LIST2</a></p><h2 id="4836-색칠하기"><a href="#4836-색칠하기" class="headerlink" title="[4836] 색칠하기"></a>[4836] 색칠하기</h2><p><strong>접근 방법</strong></p><ol><li>먼저 10*10 보드판 생성</li><li>p1(왼쪽위), p2(오른쪽아래) 좌표 값 받기<ul><li>가로: p1[0] ~ p2[0]</li><li>세로: p1[0] ~ p2[1]</li></ul></li><li>가로 세로 가지고 for문으로 색칠할 값을 “더해주기”</li><li>겹치는 부분 = 빨강+파랑 = 3</li><li>보드판에서 겹치는 영역 카운팅하기</li></ol><a id="more"></a><blockquote><p>참고로 SWEA에서는 <code>sys</code> 라이브러리를 사용할 수 없다 (<code>sys.stdin.readline()</code> 쓸 수 없음). 제출할 때는 <code>input()</code>로 바꿔서 제출했다.</p></blockquote><figure class="highlight python"><figcaption><span>색칠하기</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">T = int(sys.stdin.readline())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 보드판 입력받기 (0 ~ 9까지)</span></span><br><span class="line">    board = [[<span class="number">0</span>]*<span class="number">10</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 색칠 몇개 할건지 입력받기</span></span><br><span class="line">    N = int(sys.stdin.readline())</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 색칠할 영역 정보를 먼저 리스트로 받는다</span></span><br><span class="line">        tmp = list(map(int, sys.stdin.readline().split()))</span><br><span class="line">        p1 = (tmp[<span class="number">0</span>], tmp[<span class="number">1</span>])   <span class="comment">#왼쪽 위 좌표</span></span><br><span class="line">        p2 = (tmp[<span class="number">2</span>], tmp[<span class="number">3</span>])   <span class="comment">#오른쪽 아래 좌표</span></span><br><span class="line">        color = tmp[<span class="number">4</span>]          <span class="comment">#색칠할 색상 값</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># p2[0]을 포함한 영역까지 칠해야하니 +1</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(p1[<span class="number">0</span>], p2[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> col <span class="keyword">in</span> range(p1[<span class="number">1</span>], p2[<span class="number">1</span>]+<span class="number">1</span>):</span><br><span class="line">                <span class="comment"># 보드의 해당 위치에 색상으로 더!해!줌 (대체 ㄴㄴ)</span></span><br><span class="line">                board[row][col] += color</span><br><span class="line"></span><br><span class="line">    cnt = <span class="number">0</span>     <span class="comment"># 겹치는 영역을 셀 변수 cnt</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 보드판을 돌면서 값이 3인 부분이 있으면 cnt+1</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">if</span> board[row][col] == <span class="number">3</span>:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, cnt))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4843-특별한-정렬"><a href="#4843-특별한-정렬" class="headerlink" title="[4843] 특별한 정렬"></a>[4843] 특별한 정렬</h2><p><strong>접근 방법</strong></p><ol><li>주어진 리스트를 정렬한다 (큰거 - 작은거)</li><li>결과 리스트에 맨앞, 맨뒤 순서로 넣는다<ul><li>i번째, N-1-i번째</li><li>for문은 5까지만 해도 됨(어짜피 10개만 출력함)</li></ul></li><li>결과리스트 출력하기</li></ol><figure class="highlight python"><figcaption><span>특별한 정렬</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line">    numList = list(map(int, input().split()))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 큰거 ~ 작은거 순으로 정렬하기</span></span><br><span class="line">    numList = sorted(numList, reverse=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 결과 담을 리스트</span></span><br><span class="line">    result = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 어짜피 10개만 출력하니까 5번째 인덱스까지만 돌린다</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        result.append(numList[i])</span><br><span class="line">        result.append(numList[N<span class="number">-1</span>-i])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{}'</span>.format(tc), end=<span class="string">' '</span>)</span><br><span class="line">    print(*result)</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4837-부분집합의-합"><a href="#4837-부분집합의-합" class="headerlink" title="[4837] 부분집합의 합"></a>[4837] 부분집합의 합</h2><p><strong>접근 방법</strong></p><ol><li>부분집합을 빠르게 구한다 (<a href="https://itzjamie96.github.io/2020/10/15/Python-powersets-with-bitwise-operators/">비트연산자로 부분집합 구하기</a>)</li><li>만약 현재 부분집합의 갯수가 N, 합이 K면 cnt+1</li></ol><figure class="highlight python"><figcaption><span>부분집합의 합</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1 ~ 12까지 있는 리스트</span></span><br><span class="line">    A = list(range(<span class="number">1</span>, <span class="number">13</span>))</span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &lt;&lt; len(A)):</span><br><span class="line">        <span class="comment"># 부분집합의 케이스 마다 empty list 생성</span></span><br><span class="line">        currentSet = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(A)):</span><br><span class="line">            <span class="keyword">if</span> i &amp; (<span class="number">1</span> &lt;&lt; j):</span><br><span class="line">                currentSet.append(A[j])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 현재 부분집합의 길이가 N과 같고 합이 K랑 같다면 우리가 찾는 부분집합!</span></span><br><span class="line">        <span class="keyword">if</span> len(currentSet) == N <span class="keyword">and</span> sum(currentSet) == K:</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, cnt))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4837-부분집합의-합-1"><a href="#4837-부분집합의-합-1" class="headerlink" title="[4837] 부분집합의 합"></a>[4837] 부분집합의 합</h2><p><strong>접근 방법</strong></p><ol><li>시작, 끝, 목표가 주어진다<ul><li>시작+끝//2 : mid</li></ul></li><li>mid가 목표보다 크면 시작위치를 mid로 조정한다 (끝은 그대로 둠)</li><li>mid가 목표보다 작으면 끝 위치를 mid로 조정한다</li><li>목표를 찾기까지 시작/끝 위치를 조정한 횟수를 리턴한다</li></ol><figure class="highlight python"><figcaption><span>이진탐색</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span><span class="params">(start, end, goal)</span>:</span></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> start &lt; end:</span><br><span class="line">        mid = (start+end)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> goal &gt; mid:</span><br><span class="line">            start = mid</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> goal &lt; mid:</span><br><span class="line">            end = mid</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> cnt</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 전체페이지, A의 목표, B의 목표가 주어진다</span></span><br><span class="line">    P, A, B = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 책은 1페이지부터 시작하니 1부터 시작한다</span></span><br><span class="line">    a, b = binarySearch(<span class="number">1</span>, P, A), binarySearch(<span class="number">1</span>, P, B)</span><br><span class="line">    <span class="comment"># print(a, b)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> a &lt; b:</span><br><span class="line">        print(<span class="string">'#{} A'</span>.format(tc))</span><br><span class="line">    <span class="keyword">elif</span> a &gt; b:</span><br><span class="line">        print(<span class="string">'#{} B'</span>.format(tc))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'#{} 0'</span>.format(tc))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/20/swea-python-ps-list2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Python] 비트연산자로 부분집합 구하기</title>
      <link>https://itzjamie96.github.io/2020/10/15/python-bitwise-powersets/</link>
      <guid>https://itzjamie96.github.io/2020/10/15/python-bitwise-powersets/</guid>
      <pubDate>Thu, 15 Oct 2020 02:41:40 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;비트연산자 &lt;code&gt;&amp;amp;&lt;/code&gt;와 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;를 이용해 이중 for문이라도 빠르게 부분집합을 구해보자! &lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><blockquote><p>비트연산자 <code>&amp;</code>와 <code>&lt;&lt;</code>를 이용해 이중 for문이라도 빠르게 부분집합을 구해보자! </p></blockquote><a id="more"></a><p>파이썬으로 부분집합을 구할때 보통 <code>itertools</code>를 사용한다. 하지만 <code>itertools</code> 라이브러리 사용이 불가능한 코테도 있으니(ex. 쌤썽ㅠ)… for 문을 이용해 부분집합을 빠르게 구하는 방법도 알아야한다. 이것은 바로 <del>비트연산자</del>로 계산해서 부분집합을 구하는 방법이다. </p><p>먼저 코드부터 보자.</p><figure class="highlight python"><figcaption><span>Finding out powersets</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">n = len(arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &lt;&lt; n):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">if</span> i &amp; (<span class="number">1</span> &lt;&lt; j):</span><br><span class="line">            print(arr[j], end=<span class="string">' '</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><figcaption><span>결과</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 </span><br><span class="line">2 </span><br><span class="line">1 2 </span><br><span class="line">3 </span><br><span class="line">1 3 </span><br><span class="line">2 3 </span><br><span class="line">1 2 3 </span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></tbody></table></figure><p>위의 코드는 주어진 <code>arr</code> 리스트의 부분집합을 모두 출력한다. <code>n</code>은 <code>arr</code>의 길이인 3이다. 이렇게 원소가 3개인 집합의 부분집합들을 구하는 코드를 분석해보자. </p><blockquote><p>이 코드를 이해하기까지 정!말! 오래 걸렸다 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span> . 다시 봐도 이해할 수 있도록 코드를 한 줄씩 쪼개서 이해한 과정을 남겨본다. </p></blockquote><br><h2 id="원리"><a href="#원리" class="headerlink" title="원리"></a>원리</h2><p>이 방식은 <del>2진법</del>을 이용해 부분집합을 알아낸다. 2진법은 두 개의 숫자 <code>0</code>과 <code>1</code>만을 이용해 숫자를 나타내는 방식이다. 이걸 가지고 1은 원소가 포함 된 경우, 0은 원소가 포함되지 않은 경우로 생각한다. </p><p><img src="/img/20201015/to_binary.png" alt="2진법으로 부분집합 나타내기"></p><p>그림과 같이 <code>[1, 2, 3]</code>이라는 숫자 리스트가 있으면 가장 긴 부분집합은 [1, 2, 3]으로, 부분집합의 최대 길이는 주어진 리스트의 길이와 같다. 따라서 각 부분집합을 <del>리스트</del>처럼 생각해서 특정 원소가 있으면 <code>1</code>, 없으면 <code>0</code>으로 표기한다. </p><br><p><img src="/img/20201015/binary_numbers.png" alt="2진법으로 나타낸 모든 부분집합"></p><p>이렇게 공집합을 제외한 모든 부분집합들을 2진법으로 나타낸 후, 각 원소의 값을 알아내기 위해서는 기존에 주어진 숫자 리스트의 인덱스를 알아야 한다. 이를 위해서 각 2진법으로 나타낸 각 부분집합의 요소들과 <del>AND(교집합)</del>가 성립하는 인덱스 번호를 알아낸다. </p><blockquote><p>말로 표현하면 어려우니 그림으로 확인하자. </p></blockquote><br><p><img src="/img/20201015/check_AND.png" alt="AND 조건 확인하기"></p><p>이렇게 교집합이 있는 인덱스 번호들을 알아낸 후, 그 인덱스의 요소를 출력하면 부분집합이 구해지는 것이다. </p><br><h2 id="코드-쪼개기"><a href="#코드-쪼개기" class="headerlink" title="코드 쪼개기"></a><strong>코드 쪼개기</strong></h2><p>위의 원리를 기반으로 코드를 한 줄씩 살펴보자. </p><h3 id="for-i-in-range-1-lt-lt-n"><a href="#for-i-in-range-1-lt-lt-n" class="headerlink" title="for i in range(1 << n)"></a><strong>for i in range(1 &lt;&lt; n)</strong></h3><blockquote><p>먼저 <code>&lt;&lt;</code> 비트 연산자에 대해 알아보자 </p></blockquote><h4 id="1-lt-lt-n"><a href="#1-lt-lt-n" class="headerlink" title="1 << n"></a><strong>1 &lt;&lt; n</strong></h4><p>왼쪽의 1을 <del>2진수</del>로 보고, n번 왼쪽으로 <del>shift</del>하라는 뜻이다. 예를 들어 <code>1 &lt;&lt; 3</code>은 <del>2진수 100</del>이 된다. </p><p><img src="/img/20201015/shift.png" alt="left shift"></p><p>근데 이렇게 1을 왼쪽으로 shift하고 난 결과는 <code>2^n</code>과 결과가 같다! 원래 부분집합의 총 갯수를 구하는 공식은 <code>2^원소의 갯수</code>다. 여기서 <code>n</code>은 주어진 숫자 리스트의 길이다. </p><p>정리하자면 <code>1&lt;&lt;n</code>은 <code>2^n</code>과 같고, 이것은 <strong>부분집합의 총 갯수</strong>를 구하는 것이다. </p><figure class="highlight python"><figcaption><span>부분집합의 총 갯수만큼 for문 돌리기</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>&lt;&lt;n):</span><br></pre></td></tr></tbody></table></figure><p>따라서 위의 for문은 부분집합의 모든 case를 확인하겠다는 것이다. </p><br><h3 id="for-j-in-range-n"><a href="#for-j-in-range-n" class="headerlink" title="for j in range(n)"></a><strong>for j in range(n)</strong></h3><p><code>n</code>은 주어진 원소들의 갯수이다. 따라서 0 ~ <code>n-1</code>까지의 숫자들은 길이가 n인 리스트의 인덱스가 된다. n이 3인 예시의 경우, <code>0, 1, 2</code>를 하나씩 확인하는 for문이 된다. </p><br><h3 id="if-i-amp-1-lt-lt-j"><a href="#if-i-amp-1-lt-lt-j" class="headerlink" title="if i &amp; (1 << j)"></a><strong>if i &amp; (1 &lt;&lt; j)</strong></h3><p>여기에 나오는 <code>&amp;</code>는 <code>AND</code>를 찾는 비트연산자로, <code>A &amp; B</code>에서 A와 B의 2진수 형태에서 공통된 값을 10진수로 변환해 리턴해준다.</p><figure class="highlight python"><figcaption><span>&amp;예시</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ex) </span></span><br><span class="line">print(<span class="number">5</span> &amp; <span class="number">4</span>)</span><br></pre></td></tr></tbody></table></figure><p>위의 예시는 4를 리턴해준다. 5의 2진수 형태는 101이고, 4의 2진수 형태는 100이다. 이 두 숫자 사이의 교집합은 100이기 때문에 이것을 10진수로 변환해 4를 리턴해주는 것이다. </p><br><figure class="highlight python"><figcaption><span>핵심코드</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> i &amp; (<span class="number">1</span>&lt;&lt;j):</span><br><span class="line">print(arr[j], end=<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure><p>이제 핵심인 코드를 살펴보자. <code>i</code>는 찾으려는 부분집합이고 (이걸 2진수로 변환해서 1,0으로 이뤄진 리스트처럼 생각) j는 리스트의 인덱스 번호다. 찾으려는 부분집합과 현재 인덱스 번호 사이의 교집합이 있다면, 원본 리스트에서 그 인덱스의 요소를 출력하라는 뜻이다. </p><p>예를 들어 <code>i=3</code>일 때를 보자. j는 0 ~ 2까지의 숫자다. </p><figure class="highlight python"><figcaption><span>핵심코드 풀이</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> &amp; (<span class="number">1</span>&lt;&lt;<span class="number">0</span>) <span class="comment"># 011 &amp; 001 = 1 </span></span><br><span class="line"><span class="number">3</span> &amp; (<span class="number">1</span>&lt;&lt;<span class="number">1</span>)<span class="comment"># 011 &amp; 010 = 10</span></span><br><span class="line"><span class="number">3</span> &amp; (<span class="number">1</span>&lt;&lt;<span class="number">2</span>)<span class="comment"># 011 &amp; 100 = 0</span></span><br></pre></td></tr></tbody></table></figure><p>j가 0, 1인 경우 2진수 1과 10이라는 결과가 나오지만 j가 2인 경우는 교집합이 없기 때문에 0이 나온다. 따라서 j=2인 경우 이외에는 if 조건을 충족하기 때문에 해당 j를 인덱스로 삼아 숫자 리스트에서 값을 꺼내면 찾고자 하는 부분집합의 원소가 나오게 된다!</p><br><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>이해하는 과정이 너무 힘들었다. 하지만 [1, 2, 3]의 예시에 대해 직접 위의 과정을 손으로 적어본 것을 통해 약간(?) 이해하게 되었다. 이 방법을 깨달은 사람은 누군지 모르겠지만 진짜 천재같다. </p><figure class="highlight python"><figcaption><span>비트연산자로 부분집합 구하기</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">n = len(arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>&lt;&lt;n):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">if</span> i &amp; (<span class="number">1</span>&lt;&lt;j):</span><br><span class="line">            print(arr[j], end=<span class="string">' '</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/15/python-bitwise-powersets/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 파이썬 SW 문제해결 기본: List1</title>
      <link>https://itzjamie96.github.io/2020/10/14/swea-python-ps-list1/</link>
      <guid>https://itzjamie96.github.io/2020/10/14/swea-python-ps-list1/</guid>
      <pubDate>Wed, 14 Oct 2020 05:22:11 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;amp;subjectId=AWOVFCzaqeUDFAWg&amp;amp;&amp;amp;&quot;&gt;[문제링크] 파이썬 SW 문제해결 기본 - LIST1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4828-min-max&quot;&gt;&lt;a href=&quot;#4828-min-max&quot; class=&quot;headerlink&quot; title=&quot;[4828] min max&quot;&gt;&lt;/a&gt;[4828] min max&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;접근 방법&lt;/strong&gt;&lt;br&gt;내장 함수인 min, max를 사용하지 않고 직접 구현해서 최소와 최대값을 구하려고 했다. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;참고로 임의의 최대값과 최소값은 각각 &lt;del&gt;2147000000&lt;/del&gt;와 &lt;del&gt;-2147000000&lt;/del&gt;으로 설정했다. 일반적인 int형 변수의 최대값이 대략 &lt;del&gt;2147000000&lt;/del&gt;이기 때문이다. 앞으로도 min값과 max값을 임의로 줘야하는 일이 있다면 이 숫자를 사용하려고 한다.&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVFCzaqeUDFAWg&amp;&amp;">[문제링크] 파이썬 SW 문제해결 기본 - LIST1</a></p><h2 id="4828-min-max"><a href="#4828-min-max" class="headerlink" title="[4828] min max"></a>[4828] min max</h2><p><strong>접근 방법</strong><br>내장 함수인 min, max를 사용하지 않고 직접 구현해서 최소와 최대값을 구하려고 했다. </p><blockquote><p>참고로 임의의 최대값과 최소값은 각각 <del>2147000000</del>와 <del>-2147000000</del>으로 설정했다. 일반적인 int형 변수의 최대값이 대략 <del>2147000000</del>이기 때문이다. 앞으로도 min값과 max값을 임의로 줘야하는 일이 있다면 이 숫자를 사용하려고 한다.</p></blockquote><a id="more"></a><ul><li>mini = 2147000000</li><li>maxi = -2147000000</li><li>리스트의 내용물을 하나씩 확인한다 (for문)<ul><li>만약 현재 값이 mini보다 작다면 mini 값을 갱신</li><li>만약 현재 값이 maxi보다 크다면 maxi 값을 갱신</li></ul></li></ul><figure class="highlight python"><figcaption><span>min max</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># min과 max를 찾아서 그 두개의 차를 돌려주는 함수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findMinMax</span><span class="params">(arr)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 아주! 큰 수와 아주! 작은 수를 최대, 최소값을 담을 변수에 넣는다</span></span><br><span class="line">    mini = <span class="number">2147000000</span>   </span><br><span class="line">    maxi = <span class="number">-2147000000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 입력받은 리스트의 모든 요소를 첫번째부터 마지막까지 하나씩 확인할거다</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> arr:</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 만약 현재 요소가 위에서 설정한 mini보다 작다면 mini의 값을 현재 요소로 바꿔준다</span></span><br><span class="line">        <span class="keyword">if</span> num &lt; mini:</span><br><span class="line">            mini = num</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 만약 현재 요소가 위에서 설정한 maxi보다 크다면 maxi의 값을 현재 요소로 바꿔준다</span></span><br><span class="line">        <span class="keyword">elif</span> num &gt; maxi:</span><br><span class="line">            maxi = num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># for문이 다 끝나면 maxi와 mini 값이 나온다</span></span><br><span class="line">    <span class="comment"># 두 개의 차를 리턴한다</span></span><br><span class="line">    <span class="keyword">return</span> maxi-mini</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 리스트의 크기</span></span><br><span class="line">    N = int(input())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 각 숫자를 입력받아서 리스트에 넣어준다</span></span><br><span class="line">    numList = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 함수로 최대-최소를 구해서 그걸 result에 넣는다</span></span><br><span class="line">    result = findMinMax(numList)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BAAM 답이 나온다</span></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, result))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4831-전기버스"><a href="#4831-전기버스" class="headerlink" title="[4831] 전기버스"></a>[4831] 전기버스</h2><p><strong>&lt;접근 방법&gt;</strong></p><ul><li>K 길이의 구간에 대해서 시작(start)과 끝(end)을 먼저 정한다. 끝은 당연히 시작 위치+K다. </li><li>끝 위치에 정류장이 있는지 확인하고, 없으면 끝 위치부터 한 칸 앞으로(왼쪽으로) 이동한다.</li><li>만약 끝이 앞쪽으로 이동하다가 시작 위치에 다다를 때까지 정류장이 없으면 그 길은 못 가는 길이다.  </li><li>정류장이 있다면, 충전소 갯수를 카운트 해주고 새로운 시작과 끝 위치를 정한다.</li></ul><figure class="highlight python"><figcaption><span>전기버스</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># K, N, M을 각자 매핑해서 받는다</span></span><br><span class="line">    K, N, M = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 우선 정류장 위치를 임시 tmp 리스트에 받아두고</span></span><br><span class="line">    tmp = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 0 ~ N+1까지 있는 빈 리스트를 만들고</span></span><br><span class="line">    <span class="comment"># 정류장 위치를 1로 표시해준다</span></span><br><span class="line">    <span class="comment"># ex) [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]  &lt;= 정류장 1, 3, 5, 7, 9</span></span><br><span class="line">    stations = [<span class="number">0</span>]*(N+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">        stations[i] = <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(stations)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 시작위치와 끝 위치를 정해준다</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    end = start + K     <span class="comment">#끝 위치는 시작+K번째 인덱스가 될 거임</span></span><br><span class="line">    cnt = <span class="number">0</span>             <span class="comment"># 충전횟수를 셀 변수</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 먼저 끝 위치를 확인한다</span></span><br><span class="line">    <span class="comment">#정류장의 끝 위치(stations[end])에 정류장이..</span></span><br><span class="line">    <span class="comment">#    - 있다! =&gt; 충전 + 1, 시작위치 = 현재 끝위치, 끝 위치 다시 시작 +K 로 갱신해줌</span></span><br><span class="line">    <span class="comment">#    - 없다! =&gt; 끝 위치 - 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> start &lt; end <span class="keyword">and</span> end &lt;N:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> stations[end] == <span class="number">1</span>:</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">            start = end</span><br><span class="line">            end = start+K</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># while문이 끝났는데 end랑 start랑 같다면?</span></span><br><span class="line">    <span class="comment"># 이러면 start ~ end 구간 내에 정류장이 없어서 충전을 못한거다</span></span><br><span class="line">    <span class="comment">#  =&gt; 정류장을 못찾아서 end-1 하면서 찾아도 못 찾은 것</span></span><br><span class="line">    <span class="comment"># 결론: 구간내 가능한 정류소 없음: cnt = 0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> end == start:</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, cnt))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4834-숫자-카드"><a href="#4834-숫자-카드" class="headerlink" title="[4834] 숫자 카드"></a>[4834] 숫자 카드</h2><p><strong>&lt;접근 방법&gt;</strong></p><ul><li>특정 카드가 몇개 있는지 알아내기 위해 딕셔너리를 사용한다.</li><li>딕셔너리의 key 값에 이미 있는 카드일 때:<ul><li>해당 key의 value를 꺼낸 후, 거기에 +1을 해준다.</li><li>새로운 value를 다시 key에 넣어준다.</li></ul></li><li>딕셔너리에 없는 key일 때:<ul><li>value를 1로 해서 넣어준다.</li></ul></li></ul><figure class="highlight python"><figcaption><span>숫자카드</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N = int(input())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 카드 리스트를 입력받는다</span></span><br><span class="line">    cards = list(map(int, input()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 딕셔너리를 만든다</span></span><br><span class="line">    cDict = dict()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card <span class="keyword">in</span> cards:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 만약 딕셔너리에 카드번호가 있으면 get해서 +1해서 value에 넣어주고</span></span><br><span class="line">        <span class="keyword">if</span> card <span class="keyword">in</span> cDict.keys():</span><br><span class="line">            val = cDict.get(card)</span><br><span class="line">            cDict[card] = val + <span class="number">1</span></span><br><span class="line">        <span class="comment"># 딕셔너리 키에 없는 카드번호면 그냥 value에 1을 넣어준다</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cDict[card] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 딕셔너리의 value 중 가장 큰 걸 찾아서 key랑 value를 출력한다!</span></span><br><span class="line">    <span class="comment">#     - 만약 큰 값이 다 똑같으면 더 큰 key를 출력한다!</span></span><br><span class="line">    maxi = <span class="number">0</span></span><br><span class="line">    key = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> cDict.items():</span><br><span class="line">        <span class="keyword">if</span> v &gt; maxi:</span><br><span class="line">           key = k</span><br><span class="line">           maxi = v</span><br><span class="line">        <span class="keyword">elif</span> v == maxi:</span><br><span class="line">            <span class="keyword">if</span> k &gt; key:</span><br><span class="line">                key = k</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#{} {} {}'</span>.format(tc, key, maxi))</span><br></pre></td></tr></tbody></table></figure><br><h2 id="4835-구간합"><a href="#4835-구간합" class="headerlink" title="[4835] 구간합"></a>[4835] 구간합</h2><p><strong>&lt;접근 방법&gt;</strong></p><ul><li>리스트에 대해서 M개씩 합을 구한다.</li><li>합들을 따로 모아둔다.</li><li>모아둔 합 중에서 최댓값과 최솟값을 찾아서 차이를 알아낸다. </li></ul><figure class="highlight python"><figcaption><span>구간합</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    numList = list(map(int, input().split()))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 합들을 담을 리스트</span></span><br><span class="line">    sums = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># N-M+1 만큼 for문을 돌린다는 것:</span></span><br><span class="line">    <span class="comment">#     [1, 2, 3, 4]에서 2개씩 합을 구한다고 하면</span></span><br><span class="line">    <span class="comment">#     1+2, 2+3, 3+4 이렇게 3개가 나올 수 있다.</span></span><br><span class="line">    <span class="comment">#     그럼 1,2,3,4 중에서 1, 2, 3까지만 for문이 돌게 된다.</span></span><br><span class="line">    <span class="comment">#     즉, 4-2+1 번 for문이 도는 것! == N-M+1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N-M+<span class="number">1</span>):</span><br><span class="line">        tmp = <span class="number">0</span></span><br><span class="line">        <span class="comment"># i번째부터 M개를 다 tmp에 더해준다</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(M):</span><br><span class="line">             tmp += numList[i+j]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 합 리스트에 tmp 값을 넣어준다!</span></span><br><span class="line">        sums.append(tmp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 각각 min max구하기보다 그냥 정렬해서 맨 뒤에꺼에서 맨 앞에꺼를 빼주면 된다</span></span><br><span class="line">    sums = sorted(sums)</span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, sums[len(sums)<span class="number">-1</span>] - sums[<span class="number">0</span>]))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/10/14/swea-python-ps-list1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1288. 새로운 불면증 치료법 with Python</title>
      <link>https://itzjamie96.github.io/2020/08/25/swea-python-1288-ps/</link>
      <guid>https://itzjamie96.github.io/2020/08/25/swea-python-1288-ps/</guid>
      <pubDate>Tue, 25 Aug 2020 07:43:19 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV18_yw6I9MCFAZN&quot;&gt;1288. 새로운 불면증 치료법&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV18_yw6I9MCFAZN">1288. 새로운 불면증 치료법</a></p><a id="more"></a><br><figure class="highlight python"><figcaption><span>1288. 새로운 불면증 치료법</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1) N을 일단 스트링으로 받는다 =&gt; for문 돌리려면 N은 스트링이어야함</span></span><br><span class="line">    N = input()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2) 0~9까지 확인할 배열 생성</span></span><br><span class="line">    arr = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3) N은 문자열이니까 계산용 int N을 만들어둔다</span></span><br><span class="line">    intN = int(N)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4) count는 몇번 양을 세는지 확인할 변수</span></span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5) 0 ~ 9 사이의 숫자가 나타나지 않았다면 = 아직 배열에 0이 있다면</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> <span class="keyword">in</span> arr:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 6) 문자열 N을 가지고 for문을 돌린다</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> N:</span><br><span class="line">            <span class="keyword">if</span> arr[int(i)] &gt; <span class="number">0</span>: <span class="comment"># 만약 이미 나왔다면 그냥 다음걸로 넘어가고</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:   <span class="comment">#아직 안나왔으면 그 숫자 위치에 1 더해주기</span></span><br><span class="line">                arr[int(i)] += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 7) 아직 안끝났다면 count에 1을 더해준다</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 8) 그리고 따로 만든 정수N이랑 count를 곱한 후, </span></span><br><span class="line">        <span class="comment"># for문 돌리기 쉽게 그걸 다시 문자열로 만든다</span></span><br><span class="line">        N = str(intN * count)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 9) while이 끝났으면 마지막 count += 1이 먹힌채로 끝났을 것이다. </span></span><br><span class="line">    <span class="comment"># 그래서 1을 빼줘야함</span></span><br><span class="line">    count -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 끝</span></span><br><span class="line">    print(<span class="string">'#{} {}'</span>.format(tc, intN*count))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/08/25/swea-python-1288-ps/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1284. 수도 요금 경쟁 with Python</title>
      <link>https://itzjamie96.github.io/2020/08/11/swea-python-1284-ps/</link>
      <guid>https://itzjamie96.github.io/2020/08/11/swea-python-1284-ps/</guid>
      <pubDate>Tue, 11 Aug 2020 12:54:19 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV189xUaI8UCFAZN&quot;&gt;1284. 수도 요금 경쟁&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV189xUaI8UCFAZN">1284. 수도 요금 경쟁</a></p><a id="more"></a><br><figure class="highlight python"><figcaption><span>1284. 수도 요금 경쟁</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="comment"># tc만큰 for문 돌리기</span></span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, T+<span class="number">1</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 각 input을 map으로 받는다</span></span><br><span class="line">    P, Q, R, S, W = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># A = 사용량 * P원</span></span><br><span class="line">    A = W*P</span><br><span class="line"></span><br><span class="line">    <span class="comment"># B = R리터 보다 사용량이 적으면 Q원, R리터 보다 사용량이 높으면 Q원 + 초과량*S</span></span><br><span class="line">    B = Q <span class="keyword">if</span> W&lt;R <span class="keyword">else</span> Q+(W-R)*S</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"#{} {}"</span>.format(tc, A <span class="keyword">if</span> A&lt;B <span class="keyword">else</span> B))</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/08/11/swea-python-1284-ps/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[SWEA] 1204. 최빈수 구하기 with Python</title>
      <link>https://itzjamie96.github.io/2020/07/31/swea-python-1204-ps/</link>
      <guid>https://itzjamie96.github.io/2020/07/31/swea-python-1204-ps/</guid>
      <pubDate>Fri, 31 Jul 2020 07:51:19 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh&quot;&gt;1204. [S/W 문제해결 기본] 1일차 - 최빈수 구하기&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13zo1KAAACFAYh">1204. [S/W 문제해결 기본] 1일차 - 최빈수 구하기</a></p><a id="more"></a><figure class="highlight python"><figcaption><span>1204.최빈수 구하기</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test case의 횟수만큼 for문을 돌림</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(T):</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># test case 번호 입력받음</span></span><br><span class="line">    n = int(input())</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 점수들 list에 넣음</span></span><br><span class="line">    scores = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 가장 많이 나오는 점수를 저장하기 위한 변수</span></span><br><span class="line">    max = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 입력되는 점수의 갯수는 1000개인데 점수의 범위는 0~100이니까 0~100으로 for문을 돌리는게 더 효율적일 것 같았음</span></span><br><span class="line">    <span class="keyword">for</span> score <span class="keyword">in</span> range(<span class="number">101</span>):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 특정 점수가 리스트에 없을 때</span></span><br><span class="line">        <span class="keyword">if</span> scores.count(score) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span>    <span class="comment"># 그냥 다음 점수로 넘어가자</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 특정 점수가 #개 있고, 그게 현재 최빈수보다 크면 keep</span></span><br><span class="line">        <span class="keyword">elif</span> scores.count(score) &gt; scores.count(max):</span><br><span class="line">            max = score</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 특정 점수가 #개 있는데 현재 최빈수의 갯수랑 똑같으면 더 큰 점수를 keep</span></span><br><span class="line">        <span class="keyword">elif</span> scores.count(score) == scores.count(max):</span><br><span class="line">            <span class="keyword">if</span> score&gt;max:</span><br><span class="line">                max = score</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 최빈수 출력</span></span><br><span class="line">    print(<span class="string">f"#<span class="subst">{n}</span> <span class="subst">{max}</span>"</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/07/31/swea-python-1204-ps/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[GitHub] Repository 합치기 (commit history 포함)</title>
      <link>https://itzjamie96.github.io/2020/07/20/github-how-to-merge-repositories/</link>
      <guid>https://itzjamie96.github.io/2020/07/20/github-how-to-merge-repositories/</guid>
      <pubDate>Mon, 20 Jul 2020 11:10:12 GMT</pubDate>
      <description>
      
        &lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;작년부터 자바를 위주로 공부해오다가 최근부터 본격적으로 파이썬을 공부하게 되었다. 파이썬 공부를 위해 GitHub에서 repository를 새로 생성하려다가, 오랜만에 내가 그동안 생성한 repo들을 보게 되었는데 아주 중구난방이었다. 공부를 하다만 기록들이 넘쳐났는데, 이참에 repo들을 정리할 겸 비슷한 내용의 repo들을 합치기로 했다. *repo = repository&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><blockquote><p>작년부터 자바를 위주로 공부해오다가 최근부터 본격적으로 파이썬을 공부하게 되었다. 파이썬 공부를 위해 GitHub에서 repository를 새로 생성하려다가, 오랜만에 내가 그동안 생성한 repo들을 보게 되었는데 아주 중구난방이었다. 공부를 하다만 기록들이 넘쳐났는데, 이참에 repo들을 정리할 겸 비슷한 내용의 repo들을 합치기로 했다. *repo = repository</p></blockquote><a id="more"></a><h2 id="합치기-전-확인할-것들"><a href="#합치기-전-확인할-것들" class="headerlink" title="합치기 전 확인할 것들"></a>합치기 전 확인할 것들</h2><ul><li>합친 프로젝트들을 보관할 새로운 repo 생성하기</li><li>합칠 프로젝트들 사이에 충돌이 일어날 수 있는 요소들 정리하기 (EX: 똑같은 이름의 폴더, readme.md 등)</li><li>repo 안에 합쳐질 프로젝트 구조에 맞게 폴더 정리해두기. 구조를 미리 생각해놓는 것은 중요하다. 안그러면 한 repo에 뒤죽박죽 합쳐진 것들이 섞일 것이다. 내가 원한 폴더 구조:</li></ul><p><img src="/img/20200720/folder_structure.png" alt="원하는 폴더 구조"></p><h2 id="Repository-합치기-Merge"><a href="#Repository-합치기-Merge" class="headerlink" title="Repository 합치기(Merge)"></a>Repository 합치기(Merge)</h2><hr><h3 id="신규-repository-생성"><a href="#신규-repository-생성" class="headerlink" title="신규 repository 생성"></a>신규 repository 생성</h3><p>먼저 합칠 새로운 repo를 생성한다 (git init도 해준다). 편의상 <strong>NEW</strong> repo라고 하겠다. </p><p><img src="/img/20200720/new_java_repo.png" alt=""></p><p>나는 Java로 자료구조와 알고리즘 연습하던 각각의 두 repo를 합치기로 결정했기 때문에, 누가봐도 Java의 자료구조와 알고리즘을 위한 repo라는 것을 나타낼 수 있는 이름의 repo를 새로 만들었다.</p><hr><h3 id="합칠-repository-정리"><a href="#합칠-repository-정리" class="headerlink" title="합칠 repository 정리"></a>합칠 repository 정리</h3><p>합치기 전 확인할 부분에서 언급했듯이, <code>merge</code>하고자 하는 repo들을 좀 정리할 필요가 있다. 왜 그런지는 뒤에 나온다. 우선 편의상 내가 합치고자 하는 repo들을 <strong>OLD 1, OLD 2</strong> repo라고 하겠다. </p><p><img src="/img/20200720/old_repos.png" alt="OLD repo"> </p><hr><h3 id="repository-연결"><a href="#repository-연결" class="headerlink" title="repository 연결"></a>repository 연결</h3><p>NEW repo의 위치 (<code>C:\Git\Java-DataStructure-and-Algorithms&gt;</code>에서 OLD repo들을 <code>remote</code>로 추가해준다.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add DataStructure-and-Algorithms-in-Java https://github.com/itzjamie96/DataStructure-and-Algorithms-in-Java.git</span><br><span class="line">git remote add Problem-Solving https://github.com/itzjamie96/Problem-Solving.git</span><br></pre></td></tr></tbody></table></figure><hr><h3 id="기존-repository에서-데이터-가져오기"><a href="#기존-repository에서-데이터-가져오기" class="headerlink" title="기존 repository에서 데이터 가져오기"></a>기존 repository에서 데이터 가져오기</h3><p>각 OLD repo에서 <code>fetch</code>를 통해 원격 저장소의 데이터를 가져온다.</p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch DataStructure-and-Algorithms-in-Java master</span><br><span class="line">git fetch Problem-Solving master</span><br></pre></td></tr></tbody></table></figure><hr>   <h3 id="합치기-Merge"><a href="#합치기-Merge" class="headerlink" title="합치기 (Merge)"></a>합치기 (Merge)</h3><p>NEW와 OLD repo 들을 <code>merge</code>한다. 이 때 <del>모든 commit history</del>도 가져오기 위해 <code>--allow-unrelated-histories</code>를 해준다.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git merge --allow-unrelated-histories DataStructure-and-Algorithms-in-Java/master</span><br><span class="line"></span><br><span class="line">↓ 결과 ↓</span><br><span class="line">CONFLICT (add/add): Merge conflict in README.md</span><br><span class="line">Auto-merging README.md</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></tbody></table></figure><p>먼저 <strong>OLD 1</strong>을 합쳤더니 readme에서 conflict가 떴다 (이래서 합치기 전에 리드미를 없애던가 수정하던가 해야하는 것…) 우선 나는 리드미에 별 내용이 없었기 때문에 <code>add</code> 후 <code>commit</code>을 강행했다 (근자감). <code>push</code>까지 완료한 후 GitHub를 가보니…</p><p><img src="/img/20200720/readme_conflict.png" alt="ReadMe Conflict"></p><p>생각보다 끔찍한 모양새는 아니었다. </p><p><strong>OLD 2</strong>를 합치기 전에 리드미를 지운 후 합쳐보기로 했다. 그 후 다시 합치기 시작!</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git merge --allow-unrelated-histories Problem-Solving/master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">↓ 결과 ↓</span><br><span class="line">CONFLICT (add/add): Merge conflict in .gitignore</span><br><span class="line">Auto-merging .gitignore</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></tbody></table></figure><p>^^…이번엔 .gitignore에서 문제가 생겼다…왜 자동으로 <code>merge</code>를 해주지 않는거야 git? 한 줄이던데… 간단한 수정 후 합치기 진행!</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m "MERGED REPOSITORIES"</span><br><span class="line">git push origin master</span><br></pre></td></tr></tbody></table></figure><p>완료!!</p><hr>   <h3 id="repository-연결-해제"><a href="#repository-연결-해제" class="headerlink" title="repository 연결 해제"></a>repository 연결 해제</h3><p>마지막으로 혹시라도 기존의 repo들을 건들지 않도록 <code>remote</code>를 끊어준다.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote remove DataStructure-and-Algorithms-in-Java</span><br><span class="line">git remote remove Problem-Solving</span><br></pre></td></tr></tbody></table></figure><hr><p>다 끝난 후 GitHub에서 확인을 해봤다.</p><p><img src="/img/20200720/after_merge.png" alt="After Merge"></p><p>음 아주 잘됐군! 그저 파일만 합쳐진 것이 아니라 기존의 repo들에서 commit 기록까지 모두 잘 따라왔다.</p><p><img src="/img/20200720/commit_log.png" alt="commit log"></p><p>끝!</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://github.community/t/combining-repositories/2060">Combining Repositories</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content:encoded>
      
      <comments>https://itzjamie96.github.io/2020/07/20/github-how-to-merge-repositories/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
